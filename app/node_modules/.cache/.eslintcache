[{"/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/index.js":"1","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/App.js":"2","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/reportWebVitals.js":"3","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/search_results.jsx":"4","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/static_page.jsx":"5","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/loading_icon.jsx":"6","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/dialogbox.jsx":"7","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/history_detail.jsx":"8","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/header.jsx":"9","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/local_config.jsx":"10","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/dataset_page.jsx":"11","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/file_uploads.jsx":"12","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/history_list.jsx":"13","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/footer.jsx":"14","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/search_box.jsx":"15","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/result_filter.jsx":"16","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/util.jsx":"17","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/paginator.jsx":"18","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/gsd.jsx":"19","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/form_editor.jsx":"20","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/glycan_finder.jsx":"21"},{"size":586,"mtime":1651592626368,"results":"22","hashOfConfig":"23"},{"size":4219,"mtime":1662563309192,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1651592626367,"results":"25","hashOfConfig":"23"},{"size":6774,"mtime":1669994948762,"results":"26","hashOfConfig":"23"},{"size":2830,"mtime":1651592626371,"results":"27","hashOfConfig":"23"},{"size":313,"mtime":1651592626379,"results":"28","hashOfConfig":"23"},{"size":1249,"mtime":1651592626378,"results":"29","hashOfConfig":"23"},{"size":6027,"mtime":1651592626370,"results":"30","hashOfConfig":"23"},{"size":3199,"mtime":1651592626369,"results":"31","hashOfConfig":"23"},{"size":797,"mtime":1660055205211,"results":"32","hashOfConfig":"23"},{"size":8393,"mtime":1664932741525,"results":"33","hashOfConfig":"23"},{"size":15864,"mtime":1662044806435,"results":"34","hashOfConfig":"23"},{"size":5300,"mtime":1651592626373,"results":"35","hashOfConfig":"23"},{"size":1586,"mtime":1651592626372,"results":"36","hashOfConfig":"23"},{"size":944,"mtime":1651592626379,"results":"37","hashOfConfig":"23"},{"size":2587,"mtime":1651592626382,"results":"38","hashOfConfig":"23"},{"size":20249,"mtime":1662739626829,"results":"39","hashOfConfig":"23"},{"size":2433,"mtime":1651592626376,"results":"40","hashOfConfig":"23"},{"size":5088,"mtime":1660056571985,"results":"41","hashOfConfig":"23"},{"size":2473,"mtime":1660040454230,"results":"42","hashOfConfig":"23"},{"size":11458,"mtime":1662044859239,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"106dg28",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"46"},"/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/index.js",[],["98","99"],"/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/App.js",[],"/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/reportWebVitals.js",[],"/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/search_results.jsx",[],"/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/static_page.jsx",[],"/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/loading_icon.jsx",[],"/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/dialogbox.jsx",[],"/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/history_detail.jsx",["100","101"],"import React, { Component } from \"react\";\nimport Alertdialog from './dialogbox';\nimport Loadingicon from \"./loading_icon\";\nimport * as LocalConfig from \"./local_config\";\nimport { Link } from \"react-router-dom\";\nimport DoubleArrowOutlinedIcon from '@material-ui/icons/DoubleArrowOutlined';\nimport { Chart } from \"react-google-charts\";\n\nimport $ from \"jquery\";\n\n\nclass HistoryDetail extends Component {\n  \n  state = {\n    dialog:{\n      status:false, \n      msg:\"\"\n    }\n  };\n\n\n  handleDialogClose = () => {\n    var tmpState = this.state;\n    tmpState.dialog.status = false;\n    this.setState(tmpState);\n  }\n\n  componentDidMount() {\n\n    var reqObj = {\"bcoid\":this.props.bcoId, dataversion:this.props.dataVersion, doctype:\"pairs\"};\n    const requestOptions = { \n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(reqObj)\n    };\n    const svcUrl = LocalConfig.apiHash.dataset_history_detail;\n\n\n    fetch(svcUrl, requestOptions)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          var tmpState = this.state;\n          tmpState.response = result;\n          tmpState.isLoaded = true;          \n          if (tmpState.response.status === 0){\n            tmpState.dialog.status = true;\n            tmpState.dialog.msg = tmpState.response.error;\n          }\n          this.setState(tmpState);\n          //console.log(\"Request:\",svcUrl);\n          console.log(\"Ajax response:\", result);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n\n\n  render() {\n\n    if (!(\"response\" in this.state)){\n      return <Loadingicon/>\n    }\n\n    var recordObj = this.state.response.record;\n\n    return (\n      <div className=\"pagecn\">\n        <Alertdialog dialog={this.state.dialog} onClose={this.handleDialogClose}/>\n        <div className=\"leftblock\" style={{width:\"100%\", \n          margin:\"60px 0px 0px 0px\", \n          fontSize:\"17px\", borderBottom:\"1px solid #ccc\"}}>\n          <DoubleArrowOutlinedIcon style={{color:\"#2358C2\", fontSize:\"17px\" }}/>\n          &nbsp;\n          <Link to=\"/\" className=\"reglink\">HOME </Link> \n            &nbsp; / &nbsp;\n          <Link to={ \"/\" + this.props.bcoId + \"/\" + this.props.dataVersion +\"/history\"} className=\"reglink\">HISTORY DETAIL</Link> \n        </div>\n        <div className=\"leftblock\" style={{width:\"100%\", margin:\"40px 0px 0px 0px\"}}>\n            <div className=\"leftblock\"  style={{width:\"20%\", margin:\"0px 0px 0px 0px\"}}>\n                BCO ID<br/>\n                <input className=\"form-control\" style={{width:\"100%\"}} value={recordObj.bcoid}/>\n            </div>\n            <div className=\"leftblock\" style={{width:\"50%\",margin:\"0px 0px 0px 10px\"}}>\n                File Name(s)<br/> \n                <input className=\"form-control\" style={{width:\"100%\"}} value={recordObj.history.file_name}/>\n            </div>\n            <div className=\"leftblock\" style={{width:\"20%\",margin:\"0px 0px 0px 10px\"}}>\n                Release Date<br/>\n                <input className=\"form-control\" style={{width:\"100%\"}} value={recordObj.history.release_date}/>\n            </div>\n            <div className=\"leftblock\" style={{width:\"20%\",margin:\"20px 0px 0px 0px\"}}>\n                Field Count<br/> \n                <input className=\"form-control\" style={{width:\"100%\"}} value={recordObj.history.field_count}/>\n            </div>\n            <div className=\"leftblock\" style={{width:\"50%\",margin:\"20px 0px 0px 10px\"}}>\n                Row Count<br/>\n                <input className=\"form-control\" style={{width:\"100%\"}} value={recordObj.history.row_count}/>\n            </div>\n            <div className=\"leftblock\" style={{width:\"20%\",margin:\"20px 0px 0px 10px\"}}>\n                RecordID Count<br/>\n                <input className=\"form-control\" style={{width:\"100%\"}} value={recordObj.history.id_count}/>\n            </div>\n            <div className=\"leftblock\" style={{width:\"50%\",margin:\"20px 0px 0px 0px\"}}>\n                Fields Added ({(\"fields_added\" in recordObj.history ? recordObj.history.fields_added.length : 0)})<br/> \n                <div className=\"leftblock\" style={{width:\"100%\", height:\"100px\", overflow:\"auto\",background:\"#fff\", padding:   \"10px\"}}>\n                  <pre>{ (\"fields_added\" in recordObj.history ? recordObj.history.fields_added.join(\"\\n\") : \"\") } </pre>\n                </div>\n            </div>\n            <div className=\"leftblock\" style={{width:\"40%\",margin:\"20px 0px 0px 10px\"}}>\n                Fields Removed({(\"fields_removed\" in recordObj.history ? recordObj.history.fields_removed.length : 0)})<br/>\n                <div className=\"leftblock\" style={{width:\"100%\", height:\"100px\", overflow:\"auto\",background:\"#fff\", padding:   \"10px\"}}>\n                  <pre>{ (\"fields_removed\" in recordObj.history ? recordObj.history.fields_removed.join(\"\\n\") : \"\") }</pre>\n                </div>\n            </div>\n            <div className=\"leftblock\" style={{width:\"50%\",margin:\"20px 0px 0px 0px\"}}>\n                RecordIDs Added({(\"ids_added\" in recordObj.history ? recordObj.history.ids_added.length : 0)})<br/>\n                <div className=\"leftblock\" style={{width:\"100%\", height:\"100px\", overflow:\"auto\",background:\"#fff\", padding:   \"10px\"}}>\n                  <pre>{ (\"ids_added\" in recordObj.history ? recordObj.history.ids_added.join(\"\\n\") : \"\") }</pre>\n                </div>\n            </div>\n            <div className=\"leftblock\" style={{width:\"40%\",margin:\"20px 0px 0px 10px\"}}>\n                RecordIDs Removed({(\"ids_removed\" in recordObj.history ? recordObj.history.ids_removed.length : 0)})<br/>\n                <div className=\"leftblock\" style={{width:\"100%\", height:\"100px\", overflow:\"auto\",background:\"#fff\", padding:\"10px\"}}>\n                  <pre>{ (\"ids_removed\" in recordObj.history ? recordObj.history.ids_removed.join(\"\\n\") : \"\") }</pre>\n                </div>\n            </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default HistoryDetail;\n\n","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/header.jsx",["102","103","104","105","106","107","108"],"import React, { Component } from \"react\";\n//import Navbar from 'navbar-react'\n//import { Container} from 'react-containers';\nimport { Form, FormControl, Container, Button, Navbar, Nav, NavItem, NavDropdown, MenuItem } from 'react-bootstrap';\n\n\nclass Header extends Component {\n\n  \n\n\n  render() {\n\n    var navbarStyle =  { minHeight:\"80px\"}\n    var server = process.env.REACT_APP_SERVER;\n    if (server !== \"prd\"){\n      navbarStyle.backgroundImage = 'url(\"/imglib/watermark.'+server+'.png\")';\n    }\n    var urlDict = {\n      \"prd\":{\n        \"portal\":\"https://glygen.org\", \n        \"api\":\"https://api.glygen.org\",\n        \"sparql\":\"https://sparql.glygen.org\"\n      },\n      \"beta\":{\n        \"portal\":\"https://beta.glygen.org\",\n        \"api\":\"https://beta-api.glygen.org\",\n        \"sparql\":\"https://beta-sparql.glygen.org\"\n      },\n      \"tst\":{\n        \"portal\":\"https://tst.glygen.org\",\n        \"api\":\"https://api.tst.glygen.org\",\n        \"sparql\":\"https://sparql.tst.glygen.org\"\n      },\n      \"dev\":{\n        \"portal\":\"https://dev.glygen.org\",\n        \"api\":\"https://api.dev.glygen.org\",\n        \"sparql\":\"https://sparql.dev.glygen.org\"\n      }\n    }\n\n    console.log(\"headerlinks\", this.props.initObj);\n    var pageId = window.location.href.split(\"/\")[3];\n    pageId = (pageId.trim() === \"\" ? \"home\" : pageId);\n    var sOne = {color:\"#ccc\", margin:\"0 10px 0px 0px\"};\n    var sTwo = {color:\"#fff\", margin:\"0 10px 0px 0px\"};\n    var headerLinks = [];\n    for (var i in this.props.initObj.headerlinks){\n      var obj = this.props.initObj.headerlinks[i];  \n      var s = (obj.id === pageId ? sOne : sTwo);\n      if ([\"api\", \"portal\", \"sparql\"].indexOf(obj.id) !== -1){\n          obj.url = urlDict[server][obj.id]\n          //alert(obj.id + ':' + obj.url);\n      }\n      headerLinks.push(<Nav.Link id={\"link_\" +obj.id} key={\"link_\" +obj.id} href={obj.url} style={{fontWeight:\"bold\"}} style={s}>{obj.label}</Nav.Link>)\n    }\n    \n    var urlDict = {\n      \n    };\n\n    return (\n      <Navbar className=\"globalheader\"  variant=\"dark\" expand=\"lg\" \n        style={navbarStyle}\n        >\n        <Container fluid>\n          <Navbar.Brand href=\"/\" style={{fontSize:\"30px\"}}>\n             <img alt=\"\" src={process.env.PUBLIC_URL + '/imglib/logo-glygen.svg'} \n            style={{width:\"100%\"}} />\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"navbarScroll\" />\n          <Navbar.Collapse id=\"navbarScroll\">\n            <Nav className=\"me-auto my-2 my-lg-0\" navbarScroll style={{fontSize:\"20px\"}}>\n              {headerLinks}\n              <NavDropdown title=\"About\" id=\"navbarScrollingDropdown\"\n                style={{display:\"none\"}}\n              >\n                <NavDropdown.Item href=\"/static//workflow\">Integration Workflow</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action6\">\n                  Data Version 1.1\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action6\">\n                  Website Version 1.1\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/local_config.jsx",[],"/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/dataset_page.jsx",["109"],"import React, { Component } from \"react\";\nimport Alertdialog from './dialogbox';\nimport Loadingicon from \"./loading_icon\";\nimport * as LocalConfig from \"./local_config\";\nimport { Chart } from \"react-google-charts\";\nimport { Link } from \"react-router-dom\";\nimport DoubleArrowOutlinedIcon from '@material-ui/icons/DoubleArrowOutlined';\nimport { Markup } from 'interweave';\nimport $ from \"jquery\";\nimport {sortReleaseList} from \"./util\";\n\nvar verInfo = {};\n\nclass DatasetPage extends Component {\n  \n  state = {\n    ver:\"\",\n    tabidx:\"sampleview\",\n    dialog:{\n      status:false, \n      msg:\"\"\n    }\n  };\n\n  \n  handleDialogClose = () => {\n    var tmpState = this.state;\n    tmpState.dialog.status = false;\n    this.setState(tmpState);\n  }\n\n  handleVersion = () => {\n    var ver = $(\"#verselector\").val();\n    var reqObj = { bcoid:this.props.bcoId, dataversion:ver};\n    this.fetchPageData(reqObj);\n    var tmpState = this.state;\n    tmpState.ver = ver;\n    this.setState(tmpState);\n  }\n\n  componentDidMount() {\n      var reqObj = { bcoid:this.props.bcoId, dataversion:this.props.initObj.dataversion};\n      this.fetchPageData(reqObj); \n  \n  }\n\n\n\n  fetchPageData(reqObj){\n\n\n    const requestOptions = { \n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(reqObj)\n    };\n    const svcUrl = LocalConfig.apiHash.dataset_detail;\n\n    fetch(svcUrl, requestOptions)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          var tmpState = this.state;\n          tmpState.response = result;\n          tmpState.isLoaded = true;          \n          if (tmpState.response.status === 0){\n            tmpState.dialog.status = true;\n            tmpState.dialog.msg = tmpState.response.error;\n          }\n          this.setState(tmpState);\n          //console.log(\"Request:\",svcUrl);\n          console.log(\"Ajax response:\", result);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n\n  handleTitleClick = (e) => {\n\n    var tmpState = this.state;\n    tmpState.tabidx = e.target.id.split(\"-\")[0];\n    this.setState(tmpState);\n  };\n\n\n\n\n  render() {\n\n    if (!(\"response\" in this.state)){\n      return <Loadingicon/>\n    }\n    \n    const resObj = (this.state.response !== undefined ? this.state.response : {});\n    const extractObj = (\"record\" in resObj ? resObj.record.extract : undefined);\n    const bcoObj = (\"record\" in resObj ? resObj.record.bco : undefined);\n    const historyObj = (\"record\" in resObj ? resObj.record.history : undefined);\n  \n\n\n\n\n    var readMe = (extractObj !== undefined ? extractObj.readme : undefined); \n    var downloadUrl = (extractObj !== undefined ? extractObj.downloadurl : undefined);\n    var bcoTitle = (extractObj !== undefined ? extractObj.title : undefined);\n    var bcoDescription = (extractObj !== undefined ? extractObj.description : undefined);\n\n    var tabHash = {\n        \"sampleview\":{\n          title:\"Sample View\",\n          cn:\"\"\n        },\n        \"bcoview\":{\n          title:\"BCO JSON\",\n          cn:(<pre style={{whiteSpace:\"pre-wrap\"}}>{JSON.stringify(bcoObj, null, 4)}</pre>)\n        },\n        \"readme\":{\n          title:\"README\",\n          cn:(<pre>{readMe}</pre>)\n        },\n        \"downloads\":{\n          title:\"DOWNLOADS\",\n          cn:(\n            <ul style={{margin:\"20px 0px 100px 20px\"}}>\n              <li><Link to={downloadUrl} className=\"reglink\" target=\"_\">Download dataset file</Link></li>\n            </ul>\n          )\n        }\n      };\n\n      tabHash.sampleview.cn = \"\";    \n      if (extractObj !== undefined){\n        if(extractObj.sampledata.type === \"table\"){\n          tabHash.sampleview.cn = (\n            <Chart \n              width={'100%'}\n            chartType=\"Table\" \n            loader={<div>Loading Chart</div>}\n            data={extractObj.sampledata.data}\n            options={{showRowNumber: false, width: '100%', height: '100%'}}\n            rootProps={{ 'data-testid': '1' }}   \n            />\n          )\n        }\n        else{\n          tabHash.sampleview.cn = (<div style={{fontSize:\"14px\"}}><pre>{extractObj.sampledata.data}</pre></div>);\n          //tabHash.sampleview.cn = <Markup content={extractObj.sampledata.data}/>;\n        }  \n      }\n\n\n      var tabTitleList= [];\n      var tabContentList = [];\n      for (var tabId in tabHash){\n        var activeFlag = (tabId === this.state.tabidx ? \"active\" : \"\" );\n        var btnStyle = {width:\"100%\", fontSize:\"15px\", color:\"#333\", border:\"1px solid #ccc\"};\n        btnStyle.color = (activeFlag === \"active\" ? \"#990000\" : \"#333\");\n        btnStyle.background = (activeFlag === \"active\" ? \"#fff\" : \"#eee\");\n        btnStyle.borderBottom = (activeFlag === \"active\" ? \"1px solid #fff\" : \"1px solid #ccc\");\n        tabTitleList.push(\n          <li key={\"tab-\"+tabId} className=\"nav-item\" role=\"presentation\" \n            style={{width:\"25%\"}}>\n            <button className={\"nav-link \" + activeFlag} \n            id={tabId + \"-tab\"}  data-bs-toggle=\"tab\" \n            data-bs-target={\"#sample_view\"} type=\"button\" role=\"tab\" aria-controls={\"sample_view-cn\"} aria-selected=\"true\"\n            style={btnStyle} onClick={this.handleTitleClick}\n            >\n             {tabHash[tabId].title}  \n            </button>\n        </li>\n      );\n      tabContentList.push(\n        <div key={\"formcn-\"+tabId} \n          className={\"tab-pane fade show  leftblock \" + activeFlag} \n          id={tabId+\"-cn\"} role=\"tabpanel\" aria-labelledby={tabId + \"-tab\"}\n          style={{width:\"100%\",  padding:\"20px\", background:\"#fff\"}}>\n          {tabHash[tabId].cn}\n        </div>\n      );\n    }\n\n    var selectedFileName = \"\";\n    var verSelector = \"\";\n    if (historyObj !== undefined){\n      var verOptions = [];\n      //var verList = sortReleaseList(Object.keys(historyObj), false);\n      var verList = sortReleaseList(this.props.initObj.versionlist, false);\n      var selectedVer = (this.state.ver !== \"\" ? this.state.ver.split(\".\").join(\"_\") : verList[0].split(\".\").join(\"_\"));\n      for (var i in verList ){\n        var ver = verList[i].split(\".\").join(\"_\");\n        if (ver in historyObj){\n            verInfo[ver] = historyObj[ver];\n        }\n        if (ver in verInfo){\n          var verLbl = ver.split(\"_\").join(\".\") ;\n          var lbl = \"version \" + verLbl + \" released on \" + verInfo[ver].release_date \n          lbl += \" -- \" + verInfo[ver].id_count + \" record IDs \";\n          if (verInfo[ver].ids_added > 0){\n            lbl +=  \", \" + verInfo[ver].ids_added + \" added\";\n          }\n          else if (verInfo[ver].ids_removed > 0){\n            lbl +=  \", \" + verInfo[ver].ids_removed + \" removed\";\n          }\n          verOptions.push(<option value={verLbl}>{lbl}</option>);\n        }\n      }\n      selectedFileName = \"Sample view for \" + verInfo[selectedVer].file_name;\n      var s = {width:\"50%\"};\n      verSelector = (<select id=\"verselector\" className=\"form-select\" style={s} onChange={this.handleVersion}>{verOptions}</select>);\n    }\n\n\n    return (\n      <div className=\"pagecn\">\n        <Alertdialog dialog={this.state.dialog} onClose={this.handleDialogClose}/>\n\n        <div className=\"leftblock\" style={{width:\"100%\", \n          margin:\"60px 0px 0px 0px\", \n          fontSize:\"17px\", borderBottom:\"1px solid #ccc\"}}>\n          <DoubleArrowOutlinedIcon style={{color:\"#2358C2\", fontSize:\"17px\" }}/>\n          &nbsp;\n          <Link to=\"/\" className=\"reglink\">HOME </Link> \n            &nbsp; / &nbsp;\n          <Link to={\"/\"+this.props.bcoId} className=\"reglink\">{this.props.bcoId}</Link> \n        </div>\n        <div className=\"leftblock\" style={{width:\"100%\", margin:\"40px 0px 0px 0px\"}}>\n          <span>{selectedFileName}</span><br/>\n          <span>{verSelector}</span><br/>\n          <span style={{fontWeight:\"bold\"}}>{bcoTitle}</span><br/>\n          <span>{bcoDescription}</span><br/>\n        </div>\n\n        <div className=\"leftblock\" \n          style={{width:\"100%\", margin:\"20px 0px 0px 0px\"}}>\n          <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\" style={{width:\"50%\"}}>\n            {tabTitleList}\n          </ul>\n          <div className=\"tab-content\" id=\"myTabContent\" \n            style={{width:\"100%\", margin:\"20px 0px 0px 0px\"}}>\n            {tabContentList}\n          </div>\n        </div>\n\n       \n\n        \n\n        \n      </div>\n    );\n  }\n}\n\nexport default DatasetPage;\n","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/file_uploads.jsx",["110","111","112","113","114","115","116"],"import React, { Component } from \"react\";\nimport Alertdialog from './dialogbox';\nimport Loadingicon from \"./loading_icon\";\nimport * as LocalConfig from \"./local_config\";\nimport { Link } from \"react-router-dom\";\nimport DoubleArrowOutlinedIcon from '@material-ui/icons/DoubleArrowOutlined';\nimport { Chart } from \"react-google-charts\";\n\nimport $ from \"jquery\";\n\n\nclass FileUploads extends Component {\n  \n  state = {\n    confirmation:\"\",\n    viewstatus:0,\n    tabidx:\"failedrows\",\n    cn:\"\",\n    dialog:{\n      status:false, \n      msg:\"\"\n    }\n  };\n\n\n  handleDialogClose = () => {\n    var tmpState = this.state;\n    tmpState.dialog.status = false;\n    tmpState.viewstatus = 0;\n    $(\"#tabcn\").css(\"display\", \"none\");\n    this.setState(tmpState);\n  }\n\n  handleTitleClick = (e) => {\n    var tmpState = this.state;\n    tmpState.tabidx = e.target.id.split(\"-\")[0];\n    this.setState(tmpState);\n  };\n\n\n  handleGlycanFinder = () => {\n\n    var reqObj = {\"filename\":this.state.response.inputinfo.name};\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(reqObj)\n    };\n    const svcUrl = LocalConfig.apiHash.dataset_glycan_finder;\n  \n\n    const s = \"width:40%;margin:20px 30% 40px 30%\";\n    var tmpCn = '<img src=\"' + process.env.PUBLIC_URL + '/imglib/loading.gif\" style=\"'+s+'\">';\n    $(\"#glycan_finder_results_cn\").html(tmpCn);\n    $(\"#run_glycan_finder\").html(\"\");\n\n\n    fetch(svcUrl, requestOptions)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          var tmpState = this.state;\n          tmpState.isLoaded = true;\n          tmpState.response = result;\n          if (result.status === 0){\n            tmpState.dialog.status = true;\n            tmpState.dialog.msg = result.error;\n          }\n          this.setState(tmpState);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n\n  }\n\n\n\n\n  handleFileSubmit = () => {\n\n    var reqObj = {\"fname\":\"\", \"lname\":\"\", \"email\":\"\", \"affilation\":\"\"};\n    for (var f in reqObj){\n      reqObj[f] = $('#'+f).val();\n    }\n    reqObj[\"filename\"] = this.state.response.inputinfo.name;\n \n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(reqObj)\n    };\n    const svcUrl = LocalConfig.apiHash.dataset_submit;\n\n    fetch(svcUrl, requestOptions)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          var tmpState = this.state;\n          tmpState.isLoaded = true;\n          if (result.status === 0){\n            tmpState.dialog.status = true;\n            tmpState.dialog.msg = result.error;\n          }\n          this.setState(tmpState);\n          $(\"#submitcn\").html(result.confirmation);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n\n  }\n\n\n\n  handleFileUpload = () => {\n    \n    var file = $('#userfile')[0].files[0];\n    var fileFormat = $('#formatselector').val();\n    var qcType = $('#qcselector').val();\n    var dataVersion = $('#dataversion').val();\n\n    var formData = new FormData();\n    formData.append(\"userfile\", file);\n    formData.append(\"format\", fileFormat);\n    formData.append(\"qctype\", qcType);\n    formData.append(\"dataversion\", dataVersion);\n    \n    var tmpState = this.state;\n    tmpState.viewstatus = 1;\n    this.setState(tmpState);\n\n\n    var sizeLimit = 1000000000;\n    if (file.size > sizeLimit){\n        var msg = 'Your submitted file is ' + file.size + ' Bytes big. ';\n        msg += 'This exceeds maximum allowed file size of ' + sizeLimit + ' Bytes.';\n        var tmpState = this.state;\n        tmpState.dialog.status = true;\n        tmpState.dialog.msg = msg;\n        this.setState(tmpState);\n        return;\n    }\n   \n    const requestOptions = { \n      method: 'POST', \n      body: formData\n    };\n    const svcUrl = LocalConfig.apiHash.dataset_upload;\n\n    fetch(svcUrl, requestOptions)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          var tmpState = this.state;\n          tmpState.response = result;\n          tmpState.viewstatus = 2;\n          tmpState.isLoaded = true;\n          if (tmpState.response.status === 0){\n            tmpState.dialog.status = true;\n            tmpState.dialog.msg = tmpState.response.error;\n          }\n          if ([\"png\", \"jpeg\"].indexOf(tmpState.response.inputinfo.format) !== -1){\n            tmpState.tabidx = \"glycanfinder\";\n          }\n          this.setState(tmpState);\n          console.log(\"Ajax response:\", result);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n\n  }\n\n\n\n  getFormCn = () => {\n\n    var formatOptions = [];\n    for (var i in this.props.initObj.fileuploadformats){\n      var obj = this.props.initObj.fileuploadformats[i];\n      if ([\"csv\", \"tsv\"].indexOf(obj.id) !== -1){\n        formatOptions.push(<option value={obj.id}>{obj.label}</option>);\n      }\n    }\n\n    var qcOptions = [];\n    for (var i in this.props.initObj.fileuploadqc){\n      var obj = this.props.initObj.fileuploadqc[i];\n      qcOptions.push(<option value={obj.id}>{obj.label}</option>);\n    }\n\n    var verOptions = [];\n    for (var i in this.props.initObj.versionlist){\n      var v = this.props.initObj.versionlist[i];\n      verOptions.push(<option value={v}>v-{v}</option>);\n    }\n\n\n    return(\n      <div className=\"leftblock formone\" style={{width:\"100%\",marginTop:\"10px\"}}>\n        <div className=\"leftblock\" style={{width:\"100%\"}}>\n          <br/>  \n          <h5>Glycan Image Search</h5>\n            The Glycan Finder search tool allows you to find glycan records that\n            have similar image/structure to your query glycan image. \n                  <a id=\"glycan_finder\" href=\"/glycan_finder\"\n                  className=\"reglink\"> Click here to run Glycan Finder</a>.\n            <br/><br/><br/>\n            <h5>CSV/TSV File Uploads</h5>\n            Upload your csv or tsv file (\n                example files: <a href=\"/ln2data/downloads/examples/glyco_sites.csv\"\n                  className=\"reglink\" download>glyco_sites.csv</a>, &nbsp;\n                <a href=\"/ln2data/downloads/examples/glyco_sites_unicarbkb.csv\"\n                className=\"reglink\" download>glyco_sites_unicarbkb.csv</a>).\n                Visit the\n                  <a id=\"upload_help\" href=\"/static/upload_help\"\n                  className=\"reglink\"> tutorial/help page </a>\n                 for detailed information on how to use this functionality.\n        </div>\n        <div className=\"leftblock\" style={{width:\"25%\",\n                margin:\"20px 0px 0px 0px\",border:\"0px dashed orange\"}}>\n              <b>File Format</b><br/>\n              <select id=\"formatselector\"  className=\"form-control\">\n                {formatOptions}\n              </select>\n        </div>\n\n        <div className=\"leftblock\" style={{width:\"15%\", margin:\"20px 0px 0px 10px\"}}>\n              <b>QC Type</b><br/>\n              <select id=\"qcselector\"  className=\"form-control\">\n                {qcOptions}\n              </select>\n        </div>\n\n        <div className=\"leftblock\" style={{width:\"12%\", margin:\"20px 0px 0px 10px\"}}>\n              <b>Data Version</b><br/>\n              <select id=\"dataversion\"  className=\"form-control\">\n                {verOptions}\n              </select>\n        </div>\n\n        <div className=\"leftblock\" style={{width:\"30%\", margin:\"20px 0px 0px 10px\"}}>\n              <b>Select File</b><br/>\n              <input type=\"file\" id=\"userfile\"  className=\"form-control\"/>\n        </div>\n\n        <div className=\"leftblock\" style={{width:\"10%\", margin:\"20px 0px 0px 10px\"}}>\n              &nbsp;<br/>\n              <input\n                type=\"submit\" name=\"userfile\"  value=\"Upload File\" className=\"form-control\"\n                onClick={this.handleFileUpload}\n              />\n        </div>\n      </div>\n    );\n\n  }\n  \n\n\n\n\n  render() {\n\n\n    var tabHash = {\n        failedrows:{ title:\"Failed Rows\", cn:\"\"},\n        submitfile: { title:\"Submit File\", cn:\"\"}\n    };\n    var tabHashTwo = {\n      glycanfinder:{title:\"Run Glycan Finder\", cn:\"\"}\n    };\n\n    if (this.state.dialog.status === false && this.state.viewstatus === 1){\n      $(\"#tabcn\").css(\"display\", \"block\");\n      tabHash.failedrows.cn = (<Loadingicon/>)\n      tabHash.submitfile.cn = (<Loadingicon/>)\n    } \n    else if (this.state.dialog.status === false && this.state.viewstatus === 2){\n        if ([\"csv\", \"tsv\"].indexOf(this.state.response.inputinfo.format) !== -1){\n            tabHash.failedrows.cn = (\n              <div className=\"leftblock\">\n                <div className=\"leftblock\" style={{width:\"100%\", fontWeight:\"bold\"}}>\n                  Summary\n                </div>\n                <div className=\"leftblock\" style={{width:\"100%\", padding:\"10px\", border:\"1px solid #eee\"}}>\n                  <pre>{JSON.stringify(this.state.response.summary, null, 4)}</pre>\n                </div>\n                <div className=\"leftblock\" style={{margin:\"20px 0px 0px 0px\"}}>\n                  <Chart width={'100%'} chartType=\"Table\" loader={<div>Loading Chart</div>}\n                    data={this.state.response.failedrows}\n                    options={{showRowNumber: false, width: '100%', height: '100%', \n                        allowHtml: true }}\n                    rootProps={{ 'data-testid': '1' }}   \n                  />\n                </div>\n              </div>\n            );\n            var tmpCn = (\n              <div className=\"leftblock\" style={{color:\"red\"}}> \n                <br/><br/>\n                This file cannot be uploaded since it has {this.state.response.summary.fatal_qc_flags} fatal error(s).\n              </div>\n            );\n            if (this.state.response.summary.fatal_qc_flags === 0){\n              tmpCn = (\n                <div id=\"submitcn\" className=\"leftblock\" style={{width:\"50%\", margin:\"0px 0px 0px 20px\"}}>\n                    Please fill and submit your information. <br/><br/>\n                    First Name<br/>\n                    <input type=\"text\" id=\"fname\" className=\"form-control\" /><br/>\n                    Last Name<br/>\n                    <input type=\"text\" id=\"lname\" className=\"form-control\" /> <br/>\n                    Email Address<br/>\n                    <input type=\"text\" id=\"email\" className=\"form-control\" /> <br/>\n                    Affilation<br/>\n                    <select id=\"affilation\"  className=\"form-control\">\n                      {affOptions}\n                    </select><br/>\n                    <input type=\"submit\" id=\"submitfile\"  value=\"Submit File\" className=\"form-control\"\n                      onClick={this.handleFileSubmit}\n                    />\n \n                </div>\n              );\n            }\n            tabHash.submitfile.cn = tmpCn;\n        }\n        else if ([\"png\", \"jpeg\"].indexOf(this.state.response.inputinfo.format) !== -1){\n          var server = process.env.REACT_APP_SERVER;\n          var imageUrl = \"/ln2data/userdata/\"+server+\"/tmp/\" + this.state.response.inputinfo.name;\n          \n\n          var chartCn = \"\";\n          if (\"mappingrows\" in this.state.response){\n\n              chartCn = (\n                <div>\n                <h5>Glycan Finder Result</h5>\n                <Chart width={'100%'} chartType=\"Table\" loader={<div>Loading Chart</div>}\n                  data={this.state.response.mappingrows}\n                  options={{allowHtml: true, showRowNumber: false, width: '100%', height: '100%'}}\n                  rootProps={{ 'data-testid': '1' }}\n                />\n                </div>\n              );\n          }\n          var tmpCn = (\n                <div>\n                <div className=\"leftblock\" style={{width:\"70%\", margin:\"0px 0px 0px  20px\"}}>\n                    <h5>Query Glycan Image </h5>\n                    <img src={imageUrl}/><br/>\n                </div>\n                <div id=\"run_glycan_finder\"  className=\"leftblock\" style={{width:\"70%\", margin:\"20px 0px  0px  20px\"}}>\n                <input type=\"submit\" value=\"Run Glycan Finder\" \n                      className=\"form-control btn btn-outline-secondary btn-sm\" \n                      style={{width:\"200px\"}}\n                      onClick={this.handleGlycanFinder}\n                    />\n                </div>\n                <div id=\"glycan_finder_results_cn\" className=\"leftblock\" \n                  style={{width:\"100%\", margin:\"40px 0px 0px  20px\"}}>\n                    {chartCn}\n                </div>\n                </div>\n            );\n            tabHashTwo.glycanfinder.cn = tmpCn;\n        }\n    }\n\n    var tabTitleList= [];\n    var tabContentList = []; \n    for (var tabId in tabHash){\n        var activeFlag = (tabId === this.state.tabidx ? \"active\" : \"\" );\n        var btnStyle = {width:\"100%\", fontSize:\"15px\", color:\"#333\", border:\"1px solid #ccc\"};\n        btnStyle.color = (activeFlag === \"active\" ? \"#990000\" : \"#333\");\n        btnStyle.background = (activeFlag === \"active\" ? \"#fff\" : \"#eee\");\n        btnStyle.borderBottom = (activeFlag === \"active\" ? \"1px solid #fff\" : \"1px solid #ccc\");\n        tabTitleList.push(\n                <li key={\"tab-\"+tabId} className=\"nav-item\" role=\"presentation\"\n                  style={{width:\"25%\"}}>\n                  <button className={\"nav-link \" + activeFlag}\n                  id={tabId + \"-tab\"}  data-bs-toggle=\"tab\"\n                  data-bs-target={\"#sample_view\"} type=\"button\" role=\"tab\" aria-controls={\"sample_view-cn\"} aria-selected=\"true\"\n                  style={btnStyle} onClick={this.handleTitleClick}\n                >\n                  {tabHash[tabId].title}\n                </button>\n              </li>\n        );\n        tabContentList.push(\n                <div key={\"formcn-\"+tabId}\n                  className={\"tab-pane fade show  leftblock \" + activeFlag}\n                  id={tabId+\"-cn\"} role=\"tabpanel\" aria-labelledby={tabId + \"-tab\"}\n                  style={{width:\"100%\",  padding:\"20px\", background:\"#fff\"}}>\n                  {tabHash[tabId].cn}\n                </div>);\n    }\n\n\n    var tabsCn = (\n            <div id=\"tabcn\" className=\"leftblock\" style={{width:\"100%\", display:\"none\", margin:\"20px 0px 0px 0px\"}}>\n              <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\" style={{width:\"100%\"}}>\n                {tabTitleList}\n              </ul>\n              <div className=\"tab-content\" id=\"myTabContent\"\n                  style={{width:\"100%\", margin:\"20px 0px 0px 0px\"}}>\n                {tabContentList}\n              </div>\n          </div>);\n\n\n     var affOptions = [];\n    for (var i in this.props.initObj.affilations){\n      var obj = this.props.initObj.affilations[i];\n      affOptions.push(<option value={obj.id}>{obj.label}</option>);\n    }\n\n    var formCn = this.getFormCn();\n\n    return (\n      <div className=\"pagecn\" style={{border:\"0px dashed red\", zIndex:100}}>\n        <Alertdialog dialog={this.state.dialog} onClose={this.handleDialogClose}/>\n        <div className=\"leftblock\" style={{width:\"100%\", \n          margin:\"60px 0px 0px 0px\", \n          fontSize:\"17px\", borderBottom:\"1px solid #ccc\"}}>\n          <DoubleArrowOutlinedIcon style={{color:\"#2358C2\", fontSize:\"17px\" }}/>\n          &nbsp;\n          <Link to=\"/\" className=\"reglink\">HOME </Link> \n            &nbsp; / &nbsp;\n          <Link to={\"/uploads\"} className=\"reglink\">FILE UPLOADS</Link> \n        </div>\n        \n        {formCn}\n        <div className=\"leftblock\" style={{width:\"100%\",margin:\"15px 0px 0px 0px\",\n            borderBottom:\"1px solid #ccc\"}}></div>\n       <div className=\"leftblock\" style={{width:\"100%\", margin:\"40px 0px 0px 0px\", \n           border:\"0px dashed orange\"}}>\n          {tabsCn}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default FileUploads;\n\n","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/history_list.jsx",["117","118"],"import React, { Component } from \"react\";\nimport Alertdialog from './dialogbox';\nimport Loadingicon from \"./loading_icon\";\nimport Searchbox from \"./search_box\";\nimport * as LocalConfig from \"./local_config\";\nimport { Link } from \"react-router-dom\";\nimport DoubleArrowOutlinedIcon from '@material-ui/icons/DoubleArrowOutlined';\nimport { Chart } from \"react-google-charts\";\n\nimport $ from \"jquery\";\n\n\nclass HistoryList extends Component {\n  \n  state = {\n    ver:\"\",\n    tabidx:\"sampleview\",\n    dialog:{\n      status:false, \n      msg:\"\"\n    }\n  };\n\n\n  handleKeyPress = (e) => {\n    if(e.key === \"Enter\"){\n      e.preventDefault();\n      this.handleSearch();\n    }\n  }\n\n\n  handleSearch = () => {\n    var queryValue = $(\"#query\").val();\n    queryValue = (queryValue === undefined ? \"\" : queryValue);\n    var reqObj = {\n      \"doctype\":\"track\", \n      \"dataversion\":this.props.initObj.dataversion,\n      \"query\":queryValue\n    };\n    this.fetchPageData(reqObj);\n  }\n\n\n  handleDialogClose = () => {\n    var tmpState = this.state;\n    tmpState.dialog.status = false;\n    this.setState(tmpState);\n  }\n  \n  handleVersion = () => {\n    var ver = $(\"#verselector\").val();\n    var reqObj = {\"doctype\":\"track\", \"dataversion\":ver};\n    this.fetchPageData(reqObj);\n    var tmpState = this.state;\n    tmpState.ver = ver;\n    this.setState(tmpState);\n  }\n\n  fetchPageData(reqObj){\n    const requestOptions = { \n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(reqObj)\n    };\n    const svcUrl = LocalConfig.apiHash.dataset_history_list;\n    fetch(svcUrl, requestOptions)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          var tmpState = this.state;\n          tmpState.response = result;\n          tmpState.isLoaded = true;          \n          if (tmpState.response.status === 0){\n            tmpState.dialog.status = true;\n            tmpState.dialog.msg = tmpState.response.error;\n          }\n          this.setState(tmpState);\n          //console.log(\"Request:\",svcUrl);\n          console.log(\"Ajax response:\", result);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n\n  componentDidMount() {\n    var reqObj = {\n      \"doctype\":\"track\", \n      \"dataversion\":this.props.initObj.dataversion,\n      \"query\":\"\"\n    };\n    this.fetchPageData(reqObj);\n  }\n\n\n\n  render() {\n\n    if (!(\"response\" in this.state)){\n      return <Loadingicon/>\n    }\n    var pageIdLabel = this.props.pageId.toUpperCase();\n    var tableData = this.state.response.tabledata.data;\n\n    var verOptions = [];\n    var verList = this.props.initObj.versionlist;\n    var selectedVer = (this.state.ver !== \"\" ? this.state.ver : verList[0]);\n    for (var i=0; i < verList.length -1; i++ ){\n        var ver = verList[i];\n        var lastVer = verList[parseInt(i)+1];\n        var lbl = \"Changes from v-\" + lastVer + \" to \" + \"v-\" + ver;\n        verOptions.push(<option value={ver}>{lbl}</option>);\n    }\n    var s = {width:\"100%\"};\n    var verSelector = (\n      <select id=\"verselector\" className=\"form-select\" style={s} onChange={this.handleVersion}>{verOptions}\n      </select>\n    );\n\n\n\n\n    return (\n      <div className=\"pagecn\">\n        <Alertdialog dialog={this.state.dialog} onClose={this.handleDialogClose}/>\n        <div className=\"leftblock\" style={{width:\"100%\", \n          margin:\"60px 0px 0px 0px\", \n          fontSize:\"17px\", borderBottom:\"1px solid #ccc\"}}>\n          <DoubleArrowOutlinedIcon style={{color:\"#2358C2\", fontSize:\"17px\" }}/>\n          &nbsp;\n          <Link to=\"/\" className=\"reglink\">HOME </Link> \n            &nbsp; / &nbsp;\n          <Link to={\"/static/\"+this.props.pageId} className=\"reglink\">{pageIdLabel}</Link> \n        </div>\n\n\n        <div className=\"leftblock\" style={{width:\"40%\", margin:\"40px 0px 0px 0px\"}}>\n          <div className=\"leftblock\"  style={{width:\"90%\"}}>\n            Select version transition\n          </div>\n          <span>{verSelector}</span><br/>\n        </div>\n\n\n        <div className=\"leftblock\" style={{width:\"40%\", margin:\"40px 0px 0px 10px\"}}>\n        <Searchbox label={\"Search by BCOID or dataset file name.\"} onSearch={this.handleSearch} onKeyPress={this.handleKeyPress}/>\n        </div>\n\n\n        <div className=\"leftblock\" style={{width:\"100%\", margin:\"0px 0px 0px 0px\"}}>\n            <Chart \n                width={'100%'}\n                chartType=\"Table\" \n                loader={<div>Loading Chart</div>}\n                data={tableData}\n                options={\n                    {\n                        showRowNumber: false, width: '100%', height: '100%',\n                        page:'enable', \n                        pageSize:50, \n                        allowHtml:true, \n                        cssClassNames:{\n                            headerRow: 'googleheaderrow',\n                            tableRow:'googlerow', \n                            oddTableRow:'googleoddrow',\n                            headerCell:'googleheadercell',\n                            tableCell:'googlecell'\n                        }\n                    }\n                }\n                rootProps={{ 'data-testid': '1' }}   \n          />\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default HistoryList;\n\n","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/footer.jsx",["119"],"import React, { Component } from \"react\";\nimport { SocialIcon } from 'react-social-icons';\n\n\nclass Globalfooter extends Component {\n  render() {\n    var sOne = {fontSize:\"18px\", marginRight:\"40px\", textDecoration:\"none\"};\n    return (\n      <div className=\"leftblock\" \n        style={{width:\"100%\", background:\"DodgerBlue\", color:\"#fff\", margin:\"0px 0px 0px 0px\"}}>\n          <div className=\"leftblock\" \n            style={{width:\"80%\", textAlign:\"center\", margin:\"30px 10% 20px 10%\"}}>\n            <a href=\"https://glygen.org/license/\" className=\"text-reset\" style={sOne}>License</a> \n            <a href=\"https://glygen.org/privacy-policy/\" className=\"text-reset\" style={sOne}>Privacy Policy</a>\n            <a href=\"https://glygen.org/disclaimer/\" className=\"text-reset\" style={sOne}>Disclaimer</a>\n            <a href=\"https://glygen.org/contact-us/\" className=\"text-reset\" style={sOne}>Contact Us</a>\n          </div>\n\n          <div className=\"leftblock\" \n            style={{width:\"80%\", textAlign:\"center\", fontSize:\"20px\", margin:\"0px 10% 20px 10%\"}}>\n            Funded by NIH Glycoscience Common Fund Grant # 1U01GM125267 - 01\n          </div>\n          \n          <div className=\"leftblock\" \n            style={{width:\"80%\", textAlign:\"center\", margin:\"0px 10% 30px 10%\"}}>\n            <img alt=\"\" src={process.env.PUBLIC_URL + '/imglib/logo-uga.png'}/>\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n            <img alt=\"\" src={process.env.PUBLIC_URL + '/imglib/logo-gwu.png'}/>\n          </div>\n\n          \n      </div>\n    );\n\n  }\n}\n\nexport default Globalfooter;\n","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/search_box.jsx",[],"/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/result_filter.jsx",[],"/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/util.jsx",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],"import $ from \"jquery\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nexport function verifyReqObj (reqObj, formObj){\n\n    var typeList = [\"text\", \"int\", \"float\", \"select\", \"textarea\", \"stringlist\", \"obj\", \"objlist\"];\n    var errorList = [];\n    for (var i in formObj.groups){\n      var grpObj = formObj.groups[i];\n      for (var j in grpObj.emlist){\n        var obj = grpObj.emlist[j];\n        var emId = obj.emid;\n        var emValue =  obj.value;\n        var emLbl = obj.label;\n        if (typeList.indexOf(obj.emtype) === -1){\n            continue;\n        }\n        else if (obj.required === true && [\"stringlist\", \"objlist\"].indexOf(obj.emtype) !== -1){\n          if (emValue === undefined){\n            errorList.push(<li key={\"error_in_\" + emId}>\"{emLbl}\" cannot be empty value</li>);\n          }\n          else if (emValue.length === 0){\n            errorList.push(<li key={\"error_in_\" + emId}>\"{emLbl}\" cannot be empty value</li>);\n          }\n        }\n        else if (obj.required === true && reqObj[emId] == null){\n          errorList.push(<li key={\"error_in_\" + emId}>\"{emLbl}\" cannot be empty value</li>);\n        }\n        else if (obj.required === true && obj[\"datatype\"].split(\"|\")[1] === \"int\" && isNaN(reqObj[emId])){\n          errorList.push(<li key={\"error_in_\" + emId}>\"{emLbl}\" cannot be empty value</li>);\n        }\n        else if (obj.required === true && reqObj[emId].toString() === \"\" ){\n          errorList.push(<li key={\"error_in_\" + emId}>\"{emLbl}\" cannot be empty value</li>);\n        }\n        else if (\"datatype\" in obj){\n          if (obj[\"datatype\"].split(\"|\")[0] === \"number\"){\n            if (typeof(reqObj[emId]) !== obj[\"datatype\"].split(\"|\")[0]){\n              errorList.push(<li>\"{emLbl}\" type mismatch</li>);\n            }\n          }\n        }\n        //else{\n        //  console.log(\"FLAG-2\", emId, obj[\"datatype\"], emValue);\n        //}\n      }\n      //if (errorList.length === 0){\n      //  return errorList;\n      //}\n    }\n    return errorList;\n}\n\n\nexport function getStarList(starCount){\n\n  var starList = [];\n  for (var j =1; j <= 5; j++){\n    var fg = (j <= starCount ? \"#F5B041\" : \"#cccccc\");\n    var s = {cursor:\"pointer\",marginRight:\"1px\",fontSize:\"15px\", color:fg};\n    starList.push(<i key={\"s_\"+j} className=\"material-icons\" style={s}>star </i>)\n  }\n  return starList;\n}\n\n\nexport function filterObjectList(objList, filterList) {\n\n    var retObj = {filterinfo:{}, passedobjlist:[]};\n    for (var i in objList) {\n      var obj = objList[i];\n      var passCount = 0;\n      for (var name in obj.categories) {\n        if ([\"tags\",\"protein\"].indexOf(name) !== -1){\n          continue;\n        }\n        var value = obj.categories[name].toLowerCase(); \n        var combo = name + \"|\" + value;\n        if (!(name in retObj.filterinfo)) {\n            retObj.filterinfo[name] = {};\n        }\n        if(true){\n            if (!(value in retObj.filterinfo[name])){\n              retObj.filterinfo[name][value] = 1;\n            }\n            else{\n              retObj.filterinfo[name][value] += 1;\n            }\n        }\n        if (filterList.indexOf(combo) !== -1) {\n          passCount += 1;\n        }\n      }\n      if (filterList.length > 0) {\n        if (passCount === filterList.length){\n        //if (passCount > 0) {\n            retObj.passedobjlist.push(obj);\n        }\n      } \n      else {\n        retObj.passedobjlist.push(obj);\n      }\n    }\n\n    return retObj;\n}\n\n\n\nexport function shortText(txt, txtLen) {\n  var shortText = \"\";\n  var parts = txt.split(\" \");\n  for (var j in parts) {\n    if (shortText.length < txtLen) {\n      shortText += parts[j] + \" \";\n    } else {\n      shortText += \" ...\";\n      break;\n    }\n  }\n  return shortText;\n}\n\n\n\nexport function rndrSearchResults(objList, startIdx, endIdx) {\n\n  \n  if (objList.length === 0){\n    return (\n    <div className=\"row\" style={{color:\"red\", padding:\"0px 0px 100px 20px\"}}>\n      No results found!\n      </div>);\n  }\n\n  var bcoPrefix = 'GLYG_';\n  var dsPrefix = 'DS_';\n\n  var cardList = [];\n  for (var i=startIdx - 1; i <= endIdx -1;  i++){\n    var obj = objList[i];\n    \n    var moleculeType = (\"molecule\" in obj[\"categories\"] ? obj[\"categories\"][\"molecule\"] : \"\");\n    var speciesType = (\"species\" in obj[\"categories\"] ? obj[\"categories\"][\"species\"] : \"\");\n    var fileType = (\"file_type\" in obj[\"categories\"] ? obj[\"categories\"][\"file_type\"] : \"\");\n    var statusType = (\"status\" in obj[\"categories\"] ? obj[\"categories\"][\"status\"] : \"\");\n\n    var objId = bcoPrefix + \"0000\".substring(0, 10 - String(obj[\"bcoid\"]).length) + String(obj[\"_id\"]);\n    objId = obj[\"bcoid\"].replace(bcoPrefix, dsPrefix);\n    var titleText = statusType + ' ' + moleculeType.toLowerCase();\n    titleText += ' dataset ' + objId + ' in ';\n    titleText += fileType.toUpperCase() + ' format.';\n    titleText += ' [' + speciesType + ']';\n\n    var imgCn = (\n      <div className=\"leftblock\" style={{width:\"50%\", margin:\"20px 25% 0px 25%\"}}>     \n        <img className=\"card-img-top\" src={\"/imglib/\" + obj.iconfilename}/>\n      </div>\n    );\n    if (\"minitable\" in obj){\n      imgCn = (\n        <div className=\"leftblock\" style={{width:\"80%\", margin:\"20px 10% 0px 10%\"}}>     \n          {rndrMiniTable(obj.minitable)}\n        </div>\n      );\n    }\n\n    cardList.push(\n      <div className=\"col-md-4\">\n        <div className=\"card mb-4 box-shadow\" style={{minWidth:\"350px\"}}>\n            <div className=\"leftblock\" \n              style={{width:\"90%\", textAlign:\"center\",  fontSize:\"15px\", margin:\"20px 5% 0px 5%\"}}>\n              {titleText}\n            </div>\n            <div className=\"leftblock\" \n              style={{width:\"90%\", textAlign:\"center\", margin:\"20px 5% 0px 5%\"}}>\n              <Link className=\"reglink\" to={objId} style={{fontWeight:\"bold\"}}>\n                {obj.title}\n              </Link>\n            </div>\n            {imgCn}\n            <div className=\"card-body\">\n              <p className=\"card-text\" style={{textAlign:\"center\"}}>{shortText(obj.description, 900)}</p>\n                <div className=\"leftblock\" \n                style={{width:\"100%\",textAlign:\"center\", margin:\"20px 0px 20px 0px\"}}>\n                  <Link className=\"reglink\" to={objId}>\n                    View Details\n                  </Link> \n                </div>\n                \n            </div>\n          </div>\n        </div>\n    );\n  }\n  return (<div className=\"row\">{cardList}</div>);\n}\n\n\n\nexport function sortReleaseList(tmpList, reversedFlag){        \n\n    var factorList = [1000000, 1000, 1];\n    var relDict = {};\n    for (var i in tmpList){\n        var rel = tmpList[i]\n        var parts = (rel.indexOf(\".\") !== -1 ? rel.split(\".\") : rel.split(\"_\"));\n        var ordr = 0;\n        for (var j in parts){\n            ordr += factorList[j]*parseInt(parts[j]);\n        }\n        relDict[ordr] = rel;\n    }\n\n    var releaseList = [];\n    var keyList = Object.keys(relDict).sort().reverse();\n    for (var i in keyList){\n        var ordr = keyList[i];\n        releaseList.push(relDict[ordr]);\n    }\n    \n    return releaseList;\n\n}\n\nexport function rndrMiniTable(inObj){\n\n  var s = \"\";\n  var rowList = [];\n  var cellList = [];\n  for (var j in inObj[\"headers\"]){\n    s = {textAlign:\"center\",fontWeight:\"bold\",padding:\"5px 0px 0px 0px\", border:\"1px solid #ccc\"};\n    cellList.push(<td key={\"cell_\"+j} style={s}>{inObj[\"headers\"][j]}</td>);\n  }\n  rowList.push(<tr style={{height:\"30px\"}}>{cellList}</tr>);\n  for (var i =0; i < inObj[\"content\"].length; i ++){\n    cellList = [];\n    for (var j in inObj[\"content\"][i]){\n      s = {textAlign:\"center\",padding:\"5px 0px 0px 0px\", border:\"1px solid #ccc\"};\n      cellList.push(<td key={\"cell_\"+i+j} style={s}>{inObj[\"content\"][i][j]}</td>);\n    }\n    rowList.push(<tr key={\"row_\"+i} style={{height:\"30px\"}}>{cellList}</tr>);\n  }\n  s = {width:\"100%\",fontSize:\"16px\",border:\"1px solid #ccc\"};\n  return (\n    <table style={s} align=\"center\" cellSpacing=\"1\">\n      <tbody>{rowList}</tbody>\n    </table>\n  );\n}\n\n\n\n\n\nexport function getFormElement(pathId, formObj,formClass, emValue){\n\n  pathId = pathId.replace(\".\", \"_\");\n\n\n  function handleChange (em) {\n  }\n\n\n\n\n  var basicTypeList = [\n      \"text\",\"password\", \"int\", \"float\", \"datetime\",\"radio\", \"select\", \"textarea\",\n      \"stringlist\"\n  ];\n\n  var emType = formObj.emtype;\n  var disableFlag = (formObj.disable === true ? true : false);\n\n\n  var em = \"\";\n  if ([\"text\",\"password\", \"int\", \"float\", \"datetime\"].indexOf(emType) !== -1){\n    var newType = ([\"int\", \"float\"].indexOf(emType) !== -1 ? \"number\": emType);\n    var em = [];\n    em.push(\n      <input tag={newType} key={pathId + \"_\" +newType +  \"_input\"}\n        maxLength={formObj.maxlength}  id={pathId} type={formObj.emtype}\n        className={\"form-control \" + formClass}\n        onChange={handleChange}\n        defaultValue={emValue || ''}\n        disabled={disableFlag}\n        placeHolder={formObj.placeholder}\n      />\n    );\n    if (\"description\" in formObj){\n      em.push(\n        <span id={\"desc_\"+pathId} style={{width:\"100%\", fontStyle:\"italic\"}}>\n        {formObj.description}\n        </span>\n      );\n    }\n  }\n  else if (emType === \"button\"){\n    em = [];\n    em.push(<button id={pathId} className={formObj.class}\n      onClick={formObj.onclick} disabled={disableFlag}>\n      {formObj.value}\n      </button>);\n  }\n  else if (emType === \"radio\"){\n    em = [];\n    em.push(\n      <input type={emType} tag={emType} key={pathId +\"_radio\"}\n        className={formClass} id={pathId} value={emValue} name={formObj.name}\n        checked={formObj.checked}\n        disabled={disableFlag}\n      />\n    );\n    em.push( <span style={{fontSize:\"16px\"}}>&nbsp;{formObj.label}<br/></span>);\n    if (\"description\" in formObj){\n      em.push(<div className=\"leftblock\" id={\"desc_\"+pathId}\n        style={{margin:\"0 0 0 20px\",width:\"100%\", fontStyle:\"italic\"}}>\n        {formObj.description}</div>);\n    }\n  }\n  else if (emType === \"textarea\"){\n    em = (\n      <textarea tag={emType} key={pathId +\"_textarea\"}\n        maxLength={formObj.maxlength} id={pathId}\n        className={\"form-control \" + formClass}\n        defaultValue={emValue || ''}\n        placeholder={formObj.placeholder}\n        disabled={disableFlag}\n        style={formObj.style}\n      >\n      </textarea>\n    );\n  }\n  else if (emType === \"plaintext\"){\n    em = (\n      <pre>{emValue}</pre>\n    );\n  }\n  else if (emType === \"select\"){\n    var optList = [];\n    for (var j in emValue.optlist){\n        const val = emValue.optlist[j].value;\n        const lbl = emValue.optlist[j].label;\n        const key = pathId + \"_\" + j + \"_\" + val + \"_opt\";\n        optList.push(<option key={key} value={val}>{lbl}</option>);\n    }\n    em = (\n        <select tag={emType} key={pathId + \"_select\"} id={pathId}\n          className={\"form-select \" + formClass}\n          defaultValue={emValue.selected || ''}\n          disabled={disableFlag}\n          onChange={formObj.onchange}\n        >\n          {optList}\n        </select>\n    );\n  }\n  else if (emType === \"stringlist\"){\n    var sTwo = {width:\"100%\", textAlign:\"left\", fontSize:\"12px\"};\n    var sThree = {margin:\"0px\", padding:\"0px\", fontSize:\"12px\", textDecoration:\"none\"};\n    var tmpList = [];\n    if(typeof(emValue) === \"object\"){\n      tmpList = emValue;\n    }\n    var spanList = [];\n    for (var i in tmpList){\n      var randStr = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 16);\n      var childPathId = pathId + \"_\"+ i + \"_\" + randStr;\n      var divId = pathId + \"_\"+ i + \"_div\";\n      var btnId = pathId + \"^\"+ i + \"^btn\";\n      spanList.push(\n        <div id={divId} key={divId} className=\"leftblock\"\n          style={{width:\"100%\", padding:\"0px\",\n              marginBottom:\"3px\",border:\"1px solid #ccc\", borderRadius:\"10px\"}}>\n          <button id={btnId} key={btnId} className=\"btn btn-link rightblock\"\n            style={{color:\"#2358C2\", margin:\"10px 10px 0px 0px\",padding:\"0px\",\n            textDecoration:\"none\"}}\n            onClick={formObj.onremoveitem} > X\n          </button>\n          <input id={childPathId} key={childPathId} className={\"form-control \" + formClass}\n            type={\"text\"} defaultValue={tmpList[i] || ''}\n            disabled={true} style={formObj.style}\n          />\n        </div>\n      );\n    }\n    var divId = pathId + \"_last_div\";\n    var btnId = pathId + \"^addbtn\";\n    var inputId = pathId.replace(\"|\", \"_\") + \"_last\";\n\n    spanList.push(\n        <div id={divId} key={divId} className=\"leftblock\"\n          style={{width:\"100%\", padding:\"5px\",\n              marginBottom:\"3px\",border:\"1px solid #ccc\", borderRadius:\"10px\"}}>\n          <div className=\"leftblock\"  style={{width:\"80%\"}}>\n            <input id={inputId} key={inputId}\n              className={\"form-control \" + formClass}\n              maxLength={formObj.maxlength}\n              type={\"text\"} defaultValue={\"\"}\n              disabled={false}\n              placeholder={formObj.placeholder}\n            />\n          </div>\n          <div className=\"leftblock\" style={{margin:\"2px 0px 0px 5px\"}}>\n            <button id={btnId}\n              className=\"btn btn-outline-secondary btn-sm\"\n              onClick={formObj.onadditem}>Add\n            </button>\n          </div>\n        </div>\n    );\n    em = (\n      <div id={pathId + \"_div_xxx\"} key={pathId + \"_div_xx\"}\n        className=\"leftblock\" style={{width:\"100%\"}}>\n        {spanList}\n      </div>\n    );\n  }\n  else if (emType === \"obj\"){\n      var obj = emValue;\n      var spanList = [];\n      for (const j in formObj.proplist){\n          var childFormObj = formObj.proplist[j];\n          var childPropName = childFormObj.prop;\n          var childPropValue = obj[childPropName];\n          var childPropType = childFormObj.emtype;\n          var childPathId = pathId + \".\" + childPropName;\n          if(basicTypeList.indexOf(childPropType) !== -1){\n            if (childPropType === \"select\"){\n              childFormObj.value.selected = obj[childPropName];\n              childPropValue =  childFormObj.value;\n            }\n            var tmpEm = getFormElement(childPathId,childFormObj, formClass, childPropValue);\n            spanList.push(tmpEm);\n          }\n          else{\n            spanList.push(\n              <div key={childPathId + \"_divvv\"} className=\"leftblock\"\n              style={{width:\"98%\", margin:\"10px 10px 10px 5px\", padding:\"10px\"}}>\n                {\"exception: \" + childPropName}<br/>{JSON.stringify(obj[childPropName])}<br/>\n              </div>\n            );\n          }\n      }\n      em = (\n        <div key={pathId + \"_divone\"} className=\"leftblock\" style={{width:\"100%\", padding:\"0px 10px 20px 10px\",        marginBottom:\"10px\",border:\"1px solid #ccc\", borderRadius:\"10px\"}}>\n        {spanList}\n        </div>\n      );\n    }\n    else if (emType === \"objlist\"){\n      var sOne = {};\n      sTwo = {};\n      var typeMap = {};\n      var childPropList = [];\n      for (var i in formObj.proplist){\n        const o = formObj.proplist[i];\n        childPropList.push(o.prop);\n        var childPathId = pathId  + \"_\" + o.prop;\n        typeMap[childPathId] = o.emtype;\n        if (o.emtype === \"objlist\"){\n          for (var j in o.proplist){\n            const oo = o.proplist[j];\n            var grandChildPathId = childPathId + \"_\" + oo.prop;\n            typeMap[grandChildPathId] = oo.emtype;\n          }\n        }\n      }\n\n      var divList = [];\n      var spanList = [];\n      var lastSpanList = [];\n      for (const j in childPropList){\n        var childPropName = childPropList[j];\n        var childFormObj = formObj.proplist[j];\n        var childPathId = pathId + \"_last_\" + childPropName;\n        var childPropValue = \"\";\n        if (childFormObj.emtype === \"select\"){\n          childFormObj.value.selected = \"\";\n          childPropValue = childFormObj.value;\n        }\n        childFormObj.disable = false;\n        var tmpEm = getFormElement(childPathId,childFormObj, formClass,childPropValue);\n        lastSpanList.push(tmpEm);\n\n      }\n\n      for (const i in emValue){\n        //if (this.state.rmlist.indexOf(i) !== -1){continue;}\n        obj = emValue[i];\n        spanList[i] = [];\n        for (const j in childPropList){\n          var randStr = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 16);\n          var childPropName = childPropList[j];\n          var childPathId = pathId + \"_\" + i + \"_\" + j + \"_\" + childPropName + ' _' + randStr;\n          var childTypePath = pathId + \"_\" + childPropName;\n          var childPropType = (childTypePath in typeMap ? typeMap[childTypePath] : \"\");\n          if(basicTypeList.indexOf(childPropType) !== -1){\n            childFormObj = formObj.proplist[j];\n            childPropValue = obj[childPropName];\n            //spanList[i][childPropName] = childPropValue;\n            if (childPropType === \"select\"){\n              childFormObj.value.selected = childPropValue;\n              childPropValue = childFormObj.value;\n            }\n            childFormObj.disable = true;\n            var tmpEm = getFormElement(childPathId,childFormObj, formClass, childPropValue);\n            //var s = {border:\"1px dashed green\"};\n            //var tmpEm = (<div className=\"leftblock\" style={s}>{childFormObj.label}</div>);\n            spanList[i].push(tmpEm);\n          }\n          else{\n            sOne = { width:\"98%\", margin:\"10px 10px 10px 5px\", padding:\"10px\"};\n            sTwo = {width:\"100%\", margin:\"0px\", padding:\"10px\", border:\"1px solid #ccc\", borderRadius:\"10px\"};\n            spanList[i].push(\n              <div key={childPathId + \"_divvv\"} className=\"leftblock\" style={sOne}>\n                {\"exception: \" + childPropName}<br/>{JSON.stringify(emValue[childPropName])}<br/>\n              </div>\n            );\n          }\n        }\n        var divId = pathId + \"_obj_\" + i + \"_div\";\n        var btnId = pathId + \"^obj^\" + i + \"^btn\";\n        divList.push(\n            <div id={divId} key={divId} className=\"leftblock\" style={formObj.wrapperstyle}>\n              <button id={btnId} key={btnId} className=\"btn btn-link rightblock\"\n                style={{color:\"#2358C2\", margin:\"5px 0px 0px 0px\",padding:\"0px\",\n                textDecoration:\"none\"}}\n                onClick={formObj.onremoveitem} > X\n            </button>\n            <div id={divId + \"_\" + i + \"_divtwo\"} key={divId + \"_\" + i +  \"_divtwo\"} className=\"leftblock\" style={{width:\"100%\"}}>\n            {spanList[i]}\n            </div>\n            </div>);\n      }\n      var divId = \"last_div\";\n      var btnId = pathId + \"^addbtn\";\n      divList.push(\n        <div id={divId} key={divId} className=\"leftblock\"\n          style={{width:\"100%\", padding:\"20px 10px 20px 10px\", margin:\"0px 0px 0px 0px\",\n              border:\"1px solid #ccc\", borderRadius:\"10px\"}}>\n          <div id={divId + \"_divtwo\"} key={divId + \"_divtwo\"}\n            className=\"leftblock\"          style={{width:\"100%\"}}>\n            {lastSpanList}\n          </div>\n          <div id={divId + \"_divthree\"} key={divId + \"_divthree\"}\n            className=\"leftblock\" style={{width:\"100%\", margin:\"10px 0px 0px 0px\"}}>\n            <button id={btnId}\n              className=\"btn btn-outline-secondary btn-sm\"\n                onClick={formObj.onadditem}>\n              Add\n            </button>\n          </div>\n        </div>\n      );\n      em = (\n        <div key={pathId + \"_objlist_div_one\"}  id={pathId + \"_objlist_one\"} className=\"leftblock\" style={{width:\"100%\", fontSize:\"12px\",background:\"#fff\", marginTop:\"0px\"}}>\n           {divList}\n        </div>\n      );\n    }\n\n\n\n\n  var sOuter = {width:\"100%\",  background:\"#fff\", padding:\"5px\", fontSize:\"12px\"};\n  if (\"style\" in formObj){\n    sOuter = formObj.style;\n  }\n  var sInner = { paddingRight:\"5px\", background:\"#fff\",  fontSize:\"12px\"};\n\n  var passwordStrengthLbl = \"\";\n  //if (pathId === \"password_one\"){\n  //  passwordStrengthLbl = <div id={\"lbl_\"+pathId} className=\"leftblock\" style={sInner} >\n  //    </div>;\n  //}\n\n  var rqrd = (formObj.required === true ? \"*\" : \"\");\n  var lblDiv = (<div id={\"lbl_\"+pathId} className=\"leftblock\" style={sInner} >{formObj.label}\n    <span style={{color:\"red\"}}> {rqrd}</span> </div>);\n  if (emType === \"radio\"){lblDiv = \"\";}\n  return (\n    <div className=\"leftblock\" key={pathId +\"_\" + emType} style={sOuter}>\n      {lblDiv} {passwordStrengthLbl} {em }\n    </div>\n  );\n}\n\n\n","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/paginator.jsx",["153","154"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\nclass Paginator extends Component {\n  \n  render() {\n\n    var paginatorId = this.props.paginatorId;\n    var pageCount = parseInt(this.props.pageCount);\n    var pageStartIdx = parseInt(this.props.pageStartIdx);\n    var pageEndIdx = parseInt(this.props.pageEndIdx);\n    pageEndIdx = (pageEndIdx > pageCount ? pageCount : pageEndIdx);\n\n\n\n    var prevClass = (pageStartIdx === 1 ? \"page-item disabled\" : \"page-item\")\n    var nextClass = (pageEndIdx === pageCount ? \"page-item disabled\" : \"page-item\")\n    \n    var prevFlag = (prevClass.indexOf(\"disabled\") !== -1 ? \"_disabled\": \"\");\n    var nextFlag = (nextClass.indexOf(\"disabled\") !== -1 ? \"_disabled\": \"\");\n\n\n    var liList = [];\n    liList.push(\n      <li key={\"li_prev_\"+i} id={\"li_prev_\"+i+\"_\"+paginatorId+prevFlag}  className={prevClass} onClick={this.props.onClick}>\n        <Link  id={\"prev_page_\"+paginatorId+prevFlag} className=\"page-link\" to=\"#\" aria-label=\"Previous\" onClick={this.props.onClick} >\n        <span id={\"spanone_prev_page_\"+paginatorId+prevFlag} aria-hidden=\"true\">&laquo;</span>\n        <span id={\"spantwo_prev_page_\"+paginatorId+prevFlag} className=\"sr-only\">Previous</span>  \n        </Link>\n      </li>\n      );\n    for (var i=pageStartIdx; i <= pageEndIdx; i ++){\n      liList.push(\n        <li key={\"li_page_\"+i} id={\"li_page_\"+i+\"_\"+paginatorId} className=\"page-item\" onClick={this.props.onClick}>\n          <Link id={\"link_page_\"+i+\"_\"+paginatorId} className=\"page-link\" to=\"#\" onClick={this.props.onClick}>\n          {i}\n          </Link>\n        </li>);\n    }\n\n    liList.push(\n      <li key={\"li_next_\"+i} id={\"li_next_page_\"+paginatorId+nextFlag}  className={nextClass} onClick={this.props.onClick}>\n        <Link id={\"link_next_page_\"+paginatorId+nextFlag} className=\"page-link\" to=\"#\" aria-label=\"Next\" onClick={this.props.onClick}>\n      \n        <span id={\"spanone_next_page_\"+paginatorId+nextFlag}   aria-hidden=\"true\">&raquo;</span>\n        <span id={\"spantwo_next_page_\"+paginatorId+nextFlag}   className=\"sr-only\">Next</span>\n        </Link>\n      </li>);\n  \n    return (\n      <nav aria-label=\"Page navigation example\" \n      style={{height:\"40px\", border:\"0px dashed red\"}}>\n      <ul className=\"pagination justify-content-end\"\n        style={{border:\"0px dashed red\"}}>\n        {liList}\n      </ul>\n    </nav>\n  );\n\n    \n  }\n}\n\nexport default Paginator;\n","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/gsd.jsx",["155","156","157","158","159","160"],"import React, { Component } from \"react\";\nimport Alertdialog from './dialogbox';\nimport Loadingicon from \"./loading_icon\";\nimport * as LocalConfig from \"./local_config\";\nimport { Chart } from \"react-google-charts\";\nimport { Link } from \"react-router-dom\";\nimport DoubleArrowOutlinedIcon from '@material-ui/icons/DoubleArrowOutlined';\nimport { Markup } from 'interweave';\nimport $ from \"jquery\";\nimport {sortReleaseList, verifyReqObj} from \"./util\";\nimport formHash from \"../jsondata/form_submissions.json\";\nimport Formeditor from \"./form_editor\";\n\n\nvar verInfo = {};\n\n\nclass Gsd extends Component {\n  \n  state = {\n    ver:\"\",\n    tabidx:\"sampleview\",\n    pageid:\"submit\",\n    dialog:{\n      status:false, \n      msg:\"\"\n    }\n  };\n\n  \n  handleDialogClose = () => {\n    var tmpState = this.state;\n    tmpState.dialog.status = false;\n    this.setState(tmpState);\n  }\n\n\n  handleSubmit = () => {\n    \n    document.body.scrollTop = document.documentElement.scrollTop = 0;\n\n    var jqClass = \".submissionsform\";\n    var reqObj = {};\n    var selectedForm = formHash[\"step_one\"];\n    $(jqClass).each(function () {\n        var fieldName = $(this).attr(\"id\");\n        var fieldValue = $(this).val();\n        for (var i in selectedForm.groups){\n            for (var j in selectedForm.groups[i].emlist){\n              var emObj = selectedForm.groups[i].emlist[j];\n              if (fieldName === emObj.emid){\n                if (emObj.datatype.split(\"|\")[1] === \"int\"){\n                  fieldValue = parseInt(fieldValue);\n                }\n                reqObj[fieldName] = fieldValue;\n                if (emObj.emtype === \"select\"){\n                  emObj.value.selected = fieldValue;\n                }\n                else{\n                  emObj.value = fieldValue;\n                }\n              }\n            }\n        }\n        //$(this).val(\"\");\n    });\n\n    var errorList = verifyReqObj(reqObj, selectedForm);\n    if (errorList.length !== 0) {\n      var tmpState = this.state;\n      tmpState.dialog.status = true;\n      tmpState.dialog.msg = <div><ul> {errorList} </ul></div>;\n      this.setState(tmpState);\n      return;\n    }\n\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(reqObj)\n    };\n    const svcUrl = LocalConfig.apiHash.gsd_submit;\n    fetch(svcUrl, requestOptions)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          var tmpState = this.state;\n          tmpState.response = result;\n          tmpState.isLoaded = true;\n          if (tmpState.response.status === 0){\n            tmpState.dialog.status = true;\n            tmpState.dialog.msg = tmpState.response.error;\n          }\n          tmpState.pageid = \"confirmation\";\n          this.setState(tmpState);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n          //console.log(\"Ajax error:\", error);\n        }\n      );\n\n\n  }\n  \n  setFormValues = () => {\n    for (var k in formHash){\n      for (var i in formHash[k][\"groups\"]){\n        for (var j in formHash[k][\"groups\"][i][\"emlist\"]){\n          var emObj = formHash[k][\"groups\"][i][\"emlist\"][j];\n          if (emObj.emid === \"submitbtn\"){\n            //var f = (emObj.value === \"Back\" ? this.handleBack : this.handleNext);\n            emObj.onclick = eval(emObj.onclick);\n          }\n        }\n      }\n    }\n\n  }\n\n  setPageId = () => {\n\n\n    var selectedForm = formHash[\"step_one\"];\n    for (var i in selectedForm.groups){\n      for (var j in selectedForm.groups[i].emlist){\n        var emObj = selectedForm.groups[i].emlist[j];\n        if (emObj.datatype.indexOf(\"string\") !== -1){\n          emObj.value = \"\";\n        }\n      }\n    }\n\n    var tmpState = this.state;\n    tmpState.pageid = \"submit\";\n    this.setState(tmpState);\n\n  }\n\n\n  render() {\n\n    //if (!(\"response\" in this.state)){\n    //  return <Loadingicon/>\n    //}\n \n\n    this.setFormValues();\n    var k = \"step_one\";\n    var cn = (<div><Formeditor formClass={formHash[k].class} formObj={formHash[k]}/></div>)\n    if (this.state.pageid === \"confirmation\"){\n        cn = (<div>\n          <br/><br/>\n          Success, thank you for your submission! <Link to=\"/gsd\" onClick={this.setPageId} className=\"reglink\">Click here</Link> to submit another term.\n          </div>);\n    }\n\n    return (\n      <div className=\"pagecn\">\n        <Alertdialog dialog={this.state.dialog} onClose={this.handleDialogClose}/>\n        <div className=\"leftblock\" style={{width:\"100%\", \n          margin:\"60px 0px 0px 0px\", \n          fontSize:\"17px\", borderBottom:\"1px solid #ccc\"}}>\n          <DoubleArrowOutlinedIcon style={{color:\"#2358C2\", fontSize:\"17px\" }}/>\n          &nbsp;\n          <Link to=\"/\" className=\"reglink\">HOME </Link> \n            &nbsp; / &nbsp;\n          <Link to=\"/gsd\" className=\"reglink\">GSD Submission</Link> \n        </div>\n\n        <div className=\"leftblock\" \n          style={{width:\"100%\", margin:\"20px 0px 0px 0px\"}}>\n          {cn}\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Gsd;\n","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/form_editor.jsx",["161","162","163","164","165"],"import React, { Component } from \"react\";\nimport { Markup } from 'interweave';\nimport {getFormElement} from './util';\nimport $ from \"jquery\";\n\n\nclass Formeditor extends Component {\n  state = {\n    formObj:this.props.formObj,\n    rmlist:[]\n  };\n\n  handleRemoveObj = (e) => {\n    const objIdx = e.target.id.split(\"_\")[0];\n    var tmpState = this.state;\n    tmpState.rmlist.push(objIdx);\n    this.setState(tmpState);\n  };\n\n  handleResetObj = (e) => {\n    var tmpState = this.state;\n    tmpState.rmlist = [];\n    this.setState(tmpState);\n  };\n\n\n\n\n\n  render() {\n\n\n    var grpList = [];\n    for (var i in this.state.formObj.groups){\n      var grpObj = this.state.formObj.groups[i];\n      grpList[i] = [];\n      for (var j in grpObj.emlist){\n        var obj = grpObj.emlist[j];\n        var emId = obj.emid;\n        var emValue =  obj.value;\n        if (obj.status !== \"inactive\"){\n          var em = getFormElement(emId,obj,this.props.formClass, emValue);\n          grpList[i].push(em);\n        }\n      }\n    }\n        \n    var divList = [];\n    var formTitle = this.state.formObj.title;\n    var formDesc = this.state.formObj.description;\n    if (\"title\" in this.state.formObj){\n          var s = {width:\"100%\", background:\"#fff\", fontWeight:\"bold\"};\n          s = (\"titlestyle\" in this.state.formObj ? this.state.formObj.titlestyle : s);\n          divList.push(<div className=\"leftblock\" style={s}>\n            <Markup content={formTitle}/>\n          </div>);\n    }\n    if (\"description\" in this.state.formObj){\n        var s = {width:\"90%\", marginBottom:\"20px\"};\n        s = (\"descstyle\" in this.state.formObj ? this.state.formObj.descstyle : s);\n        divList.push(<div className=\"leftblock\" style={s}>\n            <Markup content={formDesc}/>\n            </div>);\n    }\n\n    for (var i in grpList){\n        var ttl = \"\";\n        if (\"title\" in this.state.formObj.groups[i]){\n          var s = {color:\"DodgerBlue\", width:\"100%\", margin:\"-5px 0px 10px 0px\", fontStyle:\"italic\"};\n          ttl = (\n            <div className=\"leftblock\" key={\"grp_title_\"+i} style={s}>\n              {this.state.formObj.groups[i].title}\n            </div>\n          );\n        }\n        var s = this.state.formObj.groups[i].style;\n        divList.push(<div id={\"grp_cn_\"+i} key={\"grp_ttl_\"+i} \n          className=\"leftblock\" style={s}> {ttl} {grpList[i]}</div>);\n    }\n      \n    return(<div className=\"leftblock\" style={{width:\"100%\"}}>{divList}</div>);\n  }\n}\n  \n  export default Formeditor;\n","/Users/rykahsay/projects/glygen-backend-datasetviewer/app/src/components/glycan_finder.jsx",["166","167"],"import React, { Component } from \"react\";\nimport Alertdialog from './dialogbox';\nimport Loadingicon from \"./loading_icon\";\nimport * as LocalConfig from \"./local_config\";\nimport { Link } from \"react-router-dom\";\nimport DoubleArrowOutlinedIcon from '@material-ui/icons/DoubleArrowOutlined';\nimport { Chart } from \"react-google-charts\";\n\nimport $ from \"jquery\";\n\n\nclass GlycanFinder extends Component {\n  \n  state = {\n    confirmation:\"\",\n    viewstatus:0,\n    tabidx:\"failedrows\",\n    cn:\"\",\n    dialog:{\n      status:false, \n      msg:\"\"\n    }\n  };\n\n\n  handleDialogClose = () => {\n    var tmpState = this.state;\n    tmpState.dialog.status = false;\n    tmpState.viewstatus = 0;\n    $(\"#tabcn\").css(\"display\", \"none\");\n    this.setState(tmpState);\n  }\n\n  handleTitleClick = (e) => {\n    var tmpState = this.state;\n    tmpState.tabidx = e.target.id.split(\"-\")[0];\n    this.setState(tmpState);\n  };\n\n\n  handleGlycanFinder = () => {\n\n    var reqObj = {\"filename\":this.state.response.inputinfo.name};\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(reqObj)\n    };\n    const svcUrl = LocalConfig.apiHash.dataset_glycan_finder;\n  \n\n    const s = \"width:40%;margin:20px 30% 40px 30%\";\n    var tmpCn = '<img src=\"' + process.env.PUBLIC_URL + '/imglib/loading.gif\" style=\"'+s+'\">';\n    $(\"#glycan_finder_results_cn\").html(tmpCn);\n    $(\"#run_glycan_finder\").html(\"\");\n\n\n    fetch(svcUrl, requestOptions)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          var tmpState = this.state;\n          tmpState.isLoaded = true;\n          tmpState.response = result;\n          if (result.status === 0){\n            tmpState.dialog.status = true;\n            tmpState.dialog.msg = result.error;\n          }\n          this.setState(tmpState);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n\n  }\n\n\n\n\n  handleFileSubmit = () => {\n\n    var reqObj = {\"fname\":\"\", \"lname\":\"\", \"email\":\"\", \"affilation\":\"\"};\n    for (var f in reqObj){\n      reqObj[f] = $('#'+f).val();\n    }\n    reqObj[\"filename\"] = this.state.response.inputinfo.name;\n \n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(reqObj)\n    };\n    const svcUrl = LocalConfig.apiHash.dataset_submit;\n\n    fetch(svcUrl, requestOptions)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          var tmpState = this.state;\n          tmpState.isLoaded = true;\n          if (result.status === 0){\n            tmpState.dialog.status = true;\n            tmpState.dialog.msg = result.error;\n          }\n          this.setState(tmpState);\n          $(\"#submitcn\").html(result.confirmation);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n\n  }\n\n\n\n  handleFileUpload = () => {\n    \n    var file = $('#userfile')[0].files[0];\n    var fileFormat = $('#formatselector').val();\n    var qcType = $('#qcselector').val();\n    var dataVersion = $('#dataversion').val();\n\n    var formData = new FormData();\n    formData.append(\"userfile\", file);\n    formData.append(\"format\", fileFormat);\n    formData.append(\"qctype\", qcType);\n    formData.append(\"dataversion\", dataVersion);\n    \n    var tmpState = this.state;\n    tmpState.viewstatus = 1;\n    this.setState(tmpState);\n\n\n    var sizeLimit = 1000000000;\n    if (file.size > sizeLimit){\n        var msg = 'Your submitted file is ' + file.size + ' Bytes big. ';\n        msg += 'This exceeds maximum allowed file size of ' + sizeLimit + ' Bytes.';\n        var tmpState = this.state;\n        tmpState.dialog.status = true;\n        tmpState.dialog.msg = msg;\n        this.setState(tmpState);\n        return;\n    }\n   \n    const requestOptions = { \n      method: 'POST', \n      body: formData\n    };\n    const svcUrl = LocalConfig.apiHash.dataset_upload;\n\n    fetch(svcUrl, requestOptions)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          var tmpState = this.state;\n          tmpState.response = result;\n          tmpState.viewstatus = 2;\n          tmpState.isLoaded = true;\n          if (tmpState.response.status === 0){\n            tmpState.dialog.status = true;\n            tmpState.dialog.msg = tmpState.response.error;\n          }\n          if ([\"png\", \"jpeg\"].indexOf(tmpState.response.inputinfo.format) !== -1){\n            tmpState.tabidx = \"glycanfinder\";\n          }\n          this.setState(tmpState);\n          console.log(\"Ajax response:\", result);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n\n  }\n\n\n  \n\n  getFormCn = () => {\n\n    var formatOptions = [];\n    var obj = {\"id\":\"png\", \"label\":\"Glycan PNG\"};\n    formatOptions.push(<option value={obj.id}>{obj.label}</option>);\n\n    return(\n      <div className=\"leftblock formone\" style={{width:\"100%\",marginTop:\"10px\"}}>\n        <div className=\"leftblock\" style={{width:\"100%\"}}>\n              <br/>Upload image file (\n                example file: <a href=\"/ln2data/downloads/examples/glycan_image.png\"\n                className=\"reglink\" download>glycan_image.png</a>).\n        </div>\n        <div className=\"leftblock\" style={{width:\"25%\",\n                margin:\"20px 0px 0px 0px\",border:\"0px dashed orange\"}}>\n              <b>File Format</b><br/>\n              <select id=\"formatselector\"  className=\"form-control\">\n                {formatOptions}\n              </select>\n        </div>\n\n        <div className=\"leftblock\" style={{width:\"30%\", margin:\"20px 0px 0px 10px\"}}>\n              <b>Select File</b><br/>\n              <input type=\"file\" id=\"userfile\"  className=\"form-control\"/>\n        </div>\n\n        <div className=\"leftblock\" style={{width:\"10%\", margin:\"20px 0px 0px 10px\"}}>\n              &nbsp;<br/>\n              <input\n                type=\"submit\" name=\"userfile\"  value=\"Upload File\" className=\"form-control\"\n                onClick={this.handleFileUpload}\n              />\n        </div>\n      </div>\n    );\n\n  }\n\n\n\n  render() {\n\n\n    var tabHash = {\n        glycanfinder:{title:\"Run Glycan Finder\", cn:\"\"}\n    };\n\n    if (this.state.dialog.status === false && this.state.viewstatus === 1){\n      $(\"#tabcn\").css(\"display\", \"block\");\n      tabHash.glycanfinder.cn = (<Loadingicon/>)\n    } \n    else if (this.state.dialog.status === false && this.state.viewstatus === 2){\n        if ([\"png\", \"jpeg\"].indexOf(this.state.response.inputinfo.format) !== -1){\n          var server = process.env.REACT_APP_SERVER;\n          var imageUrl = \"/ln2data/userdata/\"+server+\"/tmp/\" + this.state.response.inputinfo.name;\n          \n\n          var chartCn = \"\";\n          if (\"mappingrows\" in this.state.response){\n\n              chartCn = (\n                <div>\n                <h5>Glycan Finder Result</h5>\n                <Chart width={'100%'} chartType=\"Table\" loader={<div>Loading Chart</div>}\n                  data={this.state.response.mappingrows}\n                  options={{allowHtml: true, showRowNumber: false, width: '100%', height: '100%'}}\n                  rootProps={{ 'data-testid': '1' }}\n                />\n                </div>\n              );\n          }\n          var tmpCn = (\n                <div>\n                <div className=\"leftblock\" style={{width:\"70%\", margin:\"0px 0px 0px  20px\"}}>\n                    <h5>Query Glycan Image </h5>\n                    <img src={imageUrl}/><br/>\n                </div>\n                <div id=\"run_glycan_finder\"  className=\"leftblock\" style={{width:\"70%\", margin:\"20px 0px  0px  20px\"}}>\n                <input type=\"submit\" value=\"Run Glycan Finder\" \n                      className=\"form-control btn btn-outline-secondary btn-sm\" \n                      style={{width:\"200px\"}}\n                      onClick={this.handleGlycanFinder}\n                    />\n                </div>\n                <div id=\"glycan_finder_results_cn\" className=\"leftblock\" \n                  style={{width:\"100%\", margin:\"40px 0px 0px  20px\"}}>\n                    {chartCn}\n                </div>\n                </div>\n            );\n            tabHash.glycanfinder.cn = tmpCn;\n        }\n    }\n\n    var tabTitleList= [];\n    var tabContentList = []; \n    for (var tabId in tabHash){\n        var activeFlag = (tabId === this.state.tabidx ? \"active\" : \"\" );\n        var btnStyle = {width:\"100%\", fontSize:\"15px\", color:\"#333\", border:\"1px solid #ccc\"};\n        btnStyle.color = (activeFlag === \"active\" ? \"#990000\" : \"#333\");\n        btnStyle.background = (activeFlag === \"active\" ? \"#fff\" : \"#eee\");\n        btnStyle.borderBottom = (activeFlag === \"active\" ? \"1px solid #fff\" : \"1px solid #ccc\");\n        tabTitleList.push(\n                <li key={\"tab-\"+tabId} className=\"nav-item\" role=\"presentation\"\n                  style={{width:\"25%\"}}>\n                  <button className={\"nav-link \" + activeFlag}\n                  id={tabId + \"-tab\"}  data-bs-toggle=\"tab\"\n                  data-bs-target={\"#sample_view\"} type=\"button\" role=\"tab\" aria-controls={\"sample_view-cn\"} aria-selected=\"true\"\n                  style={btnStyle} onClick={this.handleTitleClick}\n                >\n                  {tabHash[tabId].title}\n                </button>\n              </li>\n        );\n        tabContentList.push(\n                <div key={\"formcn-\"+tabId}\n                  className={\"tab-pane fade show  leftblock \" + activeFlag}\n                  id={tabId+\"-cn\"} role=\"tabpanel\" aria-labelledby={tabId + \"-tab\"}\n                  style={{width:\"100%\",  padding:\"20px\", background:\"#fff\"}}>\n                  {tabHash[tabId].cn}\n                </div>);\n    }\n\n\n    var tabsCn = (\n            <div id=\"tabcn\" className=\"leftblock\" style={{width:\"100%\", display:\"none\", margin:\"20px 0px 0px 0px\"}}>\n              <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\" style={{width:\"100%\"}}>\n                {tabTitleList}\n              </ul>\n              <div className=\"tab-content\" id=\"myTabContent\"\n                  style={{width:\"100%\", margin:\"20px 0px 0px 0px\"}}>\n                {tabContentList}\n              </div>\n          </div>);\n\n\n     var affOptions = [];\n    for (var i in this.props.initObj.affilations){\n      var obj = this.props.initObj.affilations[i];\n      affOptions.push(<option value={obj.id}>{obj.label}</option>);\n    }\n\n    var formCn = this.getFormCn();\n\n    return (\n      <div className=\"pagecn\" style={{border:\"0px dashed red\", zIndex:100}}>\n        <Alertdialog dialog={this.state.dialog} onClose={this.handleDialogClose}/>\n        <div className=\"leftblock\" style={{width:\"100%\", \n          margin:\"60px 0px 0px 0px\", \n          fontSize:\"17px\", borderBottom:\"1px solid #ccc\"}}>\n          <DoubleArrowOutlinedIcon style={{color:\"#2358C2\", fontSize:\"17px\" }}/>\n          &nbsp;\n          <Link to=\"/\" className=\"reglink\">HOME </Link> \n            &nbsp; / &nbsp;\n          <Link to={\"/uploads\"} className=\"reglink\">GLYCAN FINDER</Link> \n        </div>\n        \n        {formCn}\n        <div className=\"leftblock\" style={{width:\"100%\",margin:\"15px 0px 0px 0px\",\n            borderBottom:\"1px solid #ccc\"}}></div>\n       <div className=\"leftblock\" style={{width:\"100%\", margin:\"40px 0px 0px 0px\", \n           border:\"0px dashed orange\"}}>\n          {tabsCn}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default GlycanFinder;\n\n",{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":7,"column":10,"nodeType":"174","messageId":"175","endLine":7,"endColumn":15},{"ruleId":"172","severity":1,"message":"176","line":9,"column":8,"nodeType":"174","messageId":"175","endLine":9,"endColumn":9},{"ruleId":"172","severity":1,"message":"177","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":14},{"ruleId":"172","severity":1,"message":"178","line":4,"column":16,"nodeType":"174","messageId":"175","endLine":4,"endColumn":27},{"ruleId":"172","severity":1,"message":"179","line":4,"column":40,"nodeType":"174","messageId":"175","endLine":4,"endColumn":46},{"ruleId":"172","severity":1,"message":"180","line":4,"column":61,"nodeType":"174","messageId":"175","endLine":4,"endColumn":68},{"ruleId":"172","severity":1,"message":"181","line":4,"column":83,"nodeType":"174","messageId":"175","endLine":4,"endColumn":91},{"ruleId":"182","severity":1,"message":"183","line":55,"column":120,"nodeType":"184","messageId":"185","endLine":55,"endColumn":129},{"ruleId":"186","severity":1,"message":"187","line":58,"column":9,"nodeType":"174","messageId":"188","endLine":58,"endColumn":16},{"ruleId":"172","severity":1,"message":"189","line":8,"column":10,"nodeType":"174","messageId":"175","endLine":8,"endColumn":16},{"ruleId":"186","severity":1,"message":"190","line":146,"column":13,"nodeType":"174","messageId":"188","endLine":146,"endColumn":21},{"ruleId":"186","severity":1,"message":"191","line":200,"column":14,"nodeType":"174","messageId":"188","endLine":200,"endColumn":15},{"ruleId":"186","severity":1,"message":"192","line":201,"column":11,"nodeType":"174","messageId":"188","endLine":201,"endColumn":14},{"ruleId":"186","severity":1,"message":"191","line":206,"column":14,"nodeType":"174","messageId":"188","endLine":206,"endColumn":15},{"ruleId":"193","severity":1,"message":"194","line":330,"column":24,"nodeType":"174","messageId":"195","endLine":330,"endColumn":34},{"ruleId":"186","severity":1,"message":"196","line":360,"column":15,"nodeType":"174","messageId":"188","endLine":360,"endColumn":20},{"ruleId":"197","severity":1,"message":"198","line":364,"column":21,"nodeType":"199","endLine":364,"endColumn":42},{"ruleId":"172","severity":1,"message":"200","line":113,"column":9,"nodeType":"174","messageId":"175","endLine":113,"endColumn":20},{"ruleId":"201","severity":1,"message":"202","line":117,"column":56,"nodeType":"203","messageId":"204","endLine":117,"endColumn":57},{"ruleId":"172","severity":1,"message":"205","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":20},{"ruleId":"172","severity":1,"message":"176","line":1,"column":8,"nodeType":"174","messageId":"175","endLine":1,"endColumn":9},{"ruleId":"197","severity":1,"message":"198","line":158,"column":9,"nodeType":"199","endLine":158,"endColumn":76},{"ruleId":"186","severity":1,"message":"191","line":218,"column":14,"nodeType":"174","messageId":"188","endLine":218,"endColumn":15},{"ruleId":"186","severity":1,"message":"206","line":219,"column":13,"nodeType":"174","messageId":"188","endLine":219,"endColumn":17},{"ruleId":"207","severity":1,"message":"208","line":234,"column":46,"nodeType":"174","messageId":"209","endLine":234,"endColumn":47},{"ruleId":"186","severity":1,"message":"210","line":239,"column":14,"nodeType":"174","messageId":"188","endLine":239,"endColumn":15},{"ruleId":"207","severity":1,"message":"208","line":241,"column":50,"nodeType":"174","messageId":"209","endLine":241,"endColumn":51},{"ruleId":"207","severity":1,"message":"208","line":247,"column":19,"nodeType":"174","messageId":"209","endLine":247,"endColumn":20},{"ruleId":"186","severity":1,"message":"211","line":280,"column":9,"nodeType":"174","messageId":"188","endLine":280,"endColumn":11},{"ruleId":"172","severity":1,"message":"212","line":361,"column":9,"nodeType":"174","messageId":"175","endLine":361,"endColumn":15},{"ruleId":"186","severity":1,"message":"213","line":388,"column":9,"nodeType":"174","messageId":"188","endLine":388,"endColumn":14},{"ruleId":"186","severity":1,"message":"214","line":389,"column":9,"nodeType":"174","messageId":"188","endLine":389,"endColumn":14},{"ruleId":"186","severity":1,"message":"215","line":422,"column":11,"nodeType":"174","messageId":"188","endLine":422,"endColumn":19},{"ruleId":"186","severity":1,"message":"216","line":428,"column":15,"nodeType":"174","messageId":"188","endLine":428,"endColumn":26},{"ruleId":"186","severity":1,"message":"191","line":457,"column":16,"nodeType":"174","messageId":"188","endLine":457,"endColumn":17},{"ruleId":"186","severity":1,"message":"216","line":460,"column":13,"nodeType":"174","messageId":"188","endLine":460,"endColumn":24},{"ruleId":"186","severity":1,"message":"210","line":463,"column":20,"nodeType":"174","messageId":"188","endLine":463,"endColumn":21},{"ruleId":"186","severity":1,"message":"215","line":472,"column":11,"nodeType":"174","messageId":"188","endLine":472,"endColumn":19},{"ruleId":"186","severity":1,"message":"217","line":475,"column":13,"nodeType":"174","messageId":"188","endLine":475,"endColumn":26},{"ruleId":"186","severity":1,"message":"218","line":476,"column":13,"nodeType":"174","messageId":"188","endLine":476,"endColumn":25},{"ruleId":"186","severity":1,"message":"216","line":477,"column":13,"nodeType":"174","messageId":"188","endLine":477,"endColumn":24},{"ruleId":"186","severity":1,"message":"219","line":478,"column":13,"nodeType":"174","messageId":"188","endLine":478,"endColumn":27},{"ruleId":"186","severity":1,"message":"220","line":484,"column":13,"nodeType":"174","messageId":"188","endLine":484,"endColumn":18},{"ruleId":"186","severity":1,"message":"221","line":494,"column":15,"nodeType":"174","messageId":"188","endLine":494,"endColumn":22},{"ruleId":"186","severity":1,"message":"217","line":495,"column":15,"nodeType":"174","messageId":"188","endLine":495,"endColumn":28},{"ruleId":"186","severity":1,"message":"216","line":496,"column":15,"nodeType":"174","messageId":"188","endLine":496,"endColumn":26},{"ruleId":"186","severity":1,"message":"222","line":498,"column":15,"nodeType":"174","messageId":"188","endLine":498,"endColumn":28},{"ruleId":"186","severity":1,"message":"220","line":508,"column":17,"nodeType":"174","messageId":"188","endLine":508,"endColumn":22},{"ruleId":"172","severity":1,"message":"223","line":515,"column":13,"nodeType":"174","messageId":"175","endLine":515,"endColumn":17},{"ruleId":"186","severity":1,"message":"213","line":523,"column":13,"nodeType":"174","messageId":"188","endLine":523,"endColumn":18},{"ruleId":"186","severity":1,"message":"214","line":524,"column":13,"nodeType":"174","messageId":"188","endLine":524,"endColumn":18},{"ruleId":"186","severity":1,"message":"213","line":537,"column":11,"nodeType":"174","messageId":"188","endLine":537,"endColumn":16},{"ruleId":"186","severity":1,"message":"214","line":538,"column":11,"nodeType":"174","messageId":"188","endLine":538,"endColumn":16},{"ruleId":"193","severity":1,"message":"224","line":26,"column":27,"nodeType":"174","messageId":"195","endLine":26,"endColumn":28},{"ruleId":"193","severity":1,"message":"224","line":26,"column":45,"nodeType":"174","messageId":"195","endLine":26,"endColumn":46},{"ruleId":"172","severity":1,"message":"225","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":19},{"ruleId":"172","severity":1,"message":"173","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":15},{"ruleId":"172","severity":1,"message":"189","line":8,"column":10,"nodeType":"174","messageId":"175","endLine":8,"endColumn":16},{"ruleId":"172","severity":1,"message":"226","line":10,"column":9,"nodeType":"174","messageId":"175","endLine":10,"endColumn":24},{"ruleId":"172","severity":1,"message":"227","line":15,"column":5,"nodeType":"174","messageId":"175","endLine":15,"endColumn":12},{"ruleId":"228","severity":1,"message":"229","line":119,"column":29,"nodeType":"230","messageId":"231","endLine":119,"endColumn":33},{"ruleId":"172","severity":1,"message":"176","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":9},{"ruleId":"186","severity":1,"message":"232","line":59,"column":13,"nodeType":"174","messageId":"188","endLine":59,"endColumn":14},{"ruleId":"186","severity":1,"message":"191","line":66,"column":14,"nodeType":"174","messageId":"188","endLine":66,"endColumn":15},{"ruleId":"186","severity":1,"message":"232","line":69,"column":15,"nodeType":"174","messageId":"188","endLine":69,"endColumn":16},{"ruleId":"186","severity":1,"message":"232","line":76,"column":13,"nodeType":"174","messageId":"188","endLine":76,"endColumn":14},{"ruleId":"186","severity":1,"message":"190","line":146,"column":13,"nodeType":"174","messageId":"188","endLine":146,"endColumn":21},{"ruleId":"197","severity":1,"message":"198","line":265,"column":21,"nodeType":"199","endLine":265,"endColumn":42},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"no-unused-vars","'Chart' is defined but never used.","Identifier","unusedVar","'$' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'NavItem' is defined but never used.","'MenuItem' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-redeclare","'urlDict' is already defined.","redeclared","'Markup' is defined but never used.","'tmpState' is already defined.","'i' is already defined.","'obj' is already defined.","no-use-before-define","'affOptions' was used before it was defined.","usedBeforeDefined","'tmpCn' is already defined.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'selectedVer' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'SocialIcon' is defined but never used.","'ordr' is already defined.","react/style-prop-object","Style prop value must be an object","stylePropNotObject","'j' is already defined.","'em' is already defined.","'sThree' is assigned a value but never used.","'divId' is already defined.","'btnId' is already defined.","'spanList' is already defined.","'childPathId' is already defined.","'childPropName' is already defined.","'childFormObj' is already defined.","'childPropValue' is already defined.","'tmpEm' is already defined.","'randStr' is already defined.","'childPropType' is already defined.","'sTwo' is assigned a value but never used.","'i' was used before it was defined.","'Loadingicon' is defined but never used.","'sortReleaseList' is defined but never used.","'verInfo' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","'s' is already defined.","no-global-assign","no-unsafe-negation"]